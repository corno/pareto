(
    'operations': {
        `impure`: | 'set' {
            `dictionary`: | 'set' {
                `is empty`: | 'operation' (
                    'context': | 'dictionary' (
                        'node': | 'type parameter' `T`
                        'ordered': `false`
                    )
                    'parameters': {
                    }
                    'result': | 'boolean' ~
                    'type parameters': {
                        `T`: ~
                    }
                )
                `is not empty`: | 'operation' (
                    'context': | 'dictionary' (
                        'node': | 'type parameter' `T`
                        'ordered': `false`
                    )
                    'parameters': {
                    }
                    'result': | 'boolean' ~
                    'type parameters': {
                        `T`: ~
                    }
                )
                `merge`: | 'operation' (
                    'context': | 'dictionary' (
                        'node': | 'type parameter' `Main`
                        'ordered': `false`
                    )
                    'parameters': {
                        `supporting dictionary`: | 'dictionary' (
                            'node': | 'type parameter' `Supporting`
                            'ordered': `false`
                        )
                    }
                    'result': | 'dictionary' (
                        'node': | 'identifier value pair' | 'type parameter' `Main`
                        'ordered': `false`
                    )
                    'type parameters': {
                        `Main`: ~
                        `Supporting`: ~
                    }
                )
                `to list, sorted by code point`: | 'operation' (
                    'context': | 'dictionary' (
                        'node': | 'type parameter' `T`
                        'ordered': `false`
                    )
                    'parameters': {
                    }
                    'result': | 'list' (
                        'node': | 'identifier value pair' | 'type parameter' `T`
                    )
                    'type parameters': {
                        `T`: ~
                    }
                )
            }
            `list`: | 'set' {
                `enrich`: | 'operation' (
                    'context': | 'list' (
                        'node': | 'type parameter' `T`
                    )
                    'parameters': {
                    }
                    'result': | 'list' (
                        'node': | 'group' {
                            `index`: | 'number' | 'local' (
                                'precision': | 'exact' (
                                    'decimal separator offset': ~
                                    'type': | 'natural' ~
                                )
                            )
                            `is first`: | 'boolean' ~
                            `is last`: | 'boolean' ~
                            `value`: | 'type parameter' `T`
                        }
                    )
                    'type parameters': {
                        `T`: ~
                    }
                )
                `expect exactly one element`: | 'operation' (
                    'context': | 'list' (
                        'node': | 'type parameter' `T`
                    )
                    'parameters': {
                    }
                    'result': | 'optional' | 'type parameter' `T`
                    'type parameters': {
                        `T`: ~
                    }
                )
                `expect more than one element`: | 'operation' (
                    'context': | 'list' (
                        'node': | 'type parameter' `T`
                    )
                    'parameters': {
                    }
                    'result': | 'optional' | 'list' (
                        'node': | 'type parameter' `T`
                    )
                    'type parameters': {
                        `T`: ~
                    }
                )
                `is empty`: | 'operation' (
                    'context': | 'list' (
                        'node': | 'type parameter' `T`
                    )
                    'parameters': {
                    }
                    'result': | 'boolean' ~
                    'type parameters': {
                        `T`: ~
                    }
                )
                `is not empty`: | 'operation' (
                    'context': | 'list' (
                        'node': | 'type parameter' `T`
                    )
                    'parameters': {
                    }
                    'result': | 'boolean' ~
                    'type parameters': {
                        `T`: ~
                    }
                )
                `join`: | 'operation' (
                    'context': | 'list' (
                        'node': | 'type parameter' `T`
                    )
                    'parameters': {
                        `separator`: | 'text' | 'local' (
                            'type': | 'single line' ~
                        )
                    }
                    'result': | 'text' | 'local' (
                        'type': | 'single line' ~
                    )
                    'type parameters': {
                        `T`: ~
                    }
                )
                `select clashing keys`: | 'operation' (
                    'context': | 'list' (
                        'node': | 'identifier value pair' | 'type parameter' `T`
                    )
                    'parameters': {
                    }
                    'result': | 'dictionary' (
                        'node': | 'list' (
                            'node': | 'type parameter' `T`
                        )
                        'ordered': `false`
                    )
                    'type parameters': {
                        `T`: ~
                    }
                )
                `to dictionary, overwrite clashing keys`: | 'operation' (
                    'context': | 'list' (
                        'node': | 'identifier value pair' | 'type parameter' `T`
                    )
                    'parameters': {
                    }
                    'result': | 'dictionary' (
                        'node': | 'type parameter' `T`
                        'ordered': `false`
                    )
                    'type parameters': {
                        `T`: ~
                    }
                )
            }
            `text`: | 'set' {
                `create valid file name`: | 'operation' (
                    'context': | 'text' | 'local' (
                        'type': | 'single line' ~
                    )
                    'parameters': {
                        `replace spaces with underscores`: | 'boolean' ~
                    }
                    'result': | 'text' | 'local' (
                        'type': | 'single line' ~
                    )
                    'type parameters': {
                    }
                )
                `escape character`: | 'operation' (
                    'context': | 'text' | 'local' (
                        'type': | 'single line' ~
                    )
                    'parameters': {
                        `character code`: | 'number' | 'local' (
                            'precision': | 'exact' (
                                'decimal separator offset': ~
                                'type': | 'natural' ~
                            )
                        )
                        `escape character code`: | 'number' | 'local' (
                            'precision': | 'exact' (
                                'decimal separator offset': ~
                                'type': | 'natural' ~
                            )
                        )
                    }
                    'result': | 'text' | 'local' (
                        'type': | 'single line' ~
                    )
                    'type parameters': {
                    }
                )
                `repeat`: | 'operation' (
                    'context': | 'text' | 'local' (
                        'type': | 'single line' ~
                    )
                    'parameters': {
                        `count`: | 'number' | 'local' (
                            'precision': | 'exact' (
                                'decimal separator offset': ~
                                'type': | 'natural' ~
                            )
                        )
                    }
                    'result': | 'text' | 'local' (
                        'type': | 'single line' ~
                    )
                    'type parameters': {
                    }
                )
                `serialize with apostrophe delimiter`: | 'operation' (
                    'context': | 'text' | 'local' (
                        'type': | 'single line' ~
                    )
                    'parameters': {
                    }
                    'result': | 'text' | 'local' (
                        'type': | 'single line' ~
                    )
                    'type parameters': {
                    }
                )
                `serialize with grave delimiter`: | 'operation' (
                    'context': | 'text' | 'local' (
                        'type': | 'single line' ~
                    )
                    'parameters': {
                    }
                    'result': | 'text' | 'local' (
                        'type': | 'single line' ~
                    )
                    'type parameters': {
                    }
                )
                `serialize with quote delimiter`: | 'operation' (
                    'context': | 'text' | 'local' (
                        'type': | 'single line' ~
                    )
                    'parameters': {
                    }
                    'result': | 'text' | 'local' (
                        'type': | 'single line' ~
                    )
                    'type parameters': {
                    }
                )
                `to character list`: | 'operation' (
                    'context': | 'text' | 'local' (
                        'type': | 'single line' ~
                    )
                    'parameters': {
                    }
                    'result': | 'list' (
                        'node': | 'number' | 'local' (
                            'precision': | 'exact' (
                                'decimal separator offset': ~
                                'type': | 'natural' ~
                            )
                        )
                    )
                    'type parameters': {
                    }
                )
            }
        }
        `pure`: | 'set' {
            `dictionary`: | 'set' {
                `create single entry dictionary`: | 'operation' (
                    'context': | 'identifier value pair' | 'type parameter' `T`
                    'parameters': {
                    }
                    'result': | 'dictionary' (
                        'node': | 'type parameter' `T`
                        'ordered': `false`
                    )
                    'type parameters': {
                        `T`: ~
                    }
                )
                `filter`: | 'operation' (
                    'context': | 'dictionary' (
                        'node': | 'optional' | 'type parameter' `T`
                        'ordered': `false`
                    )
                    'parameters': {
                    }
                    'result': | 'dictionary' (
                        'node': | 'type parameter' `T`
                        'ordered': `false`
                    )
                    'type parameters': {
                        `T`: ~
                    }
                )
                `flatten`: | 'operation' (
                    'context': | 'dictionary' (
                        'node': | 'dictionary' (
                            'node': | 'type parameter' `T`
                            'ordered': `false`
                        )
                        'ordered': `false`
                    )
                    'parameters': {
                        `separator`: | 'text' | 'local' (
                            'type': | 'single line' ~
                        )
                    }
                    'result': | 'dictionary' (
                        'node': | 'type parameter' `T`
                        'ordered': `false`
                    )
                    'type parameters': {
                        `T`: ~
                    }
                )
                `group`: | 'operation' (
                    'context': | 'dictionary' (
                        'node': | 'identifier value pair' | 'type parameter' `T`
                        'ordered': `false`
                    )
                    'parameters': {
                    }
                    'result': | 'dictionary' (
                        'node': | 'dictionary' (
                            'node': | 'type parameter' `T`
                            'ordered': `false`
                        )
                        'ordered': `false`
                    )
                    'type parameters': {
                        `T`: ~
                    }
                )
                `pad identifiers`: | 'operation' (
                    'context': | 'dictionary' (
                        'node': | 'type parameter' `T`
                        'ordered': `false`
                    )
                    'parameters': {
                        `prefix`: | 'text' | 'local' (
                            'type': | 'single line' ~
                        )
                        `suffix`: | 'text' | 'local' (
                            'type': | 'single line' ~
                        )
                    }
                    'result': | 'dictionary' (
                        'node': | 'type parameter' `T`
                        'ordered': `false`
                    )
                    'type parameters': {
                        `T`: ~
                    }
                )
            }
            `list`: | 'set' {
                `append`: | 'operation' (
                    'context': | 'list' (
                        'node': | 'type parameter' `T`
                    )
                    'parameters': {
                        `element`: | 'type parameter' `T`
                    }
                    'result': | 'list' (
                        'node': | 'type parameter' `T`
                    )
                    'type parameters': {
                        `T`: ~
                    }
                )
                `filter`: | 'operation' (
                    'context': | 'list' (
                        'node': | 'optional' | 'type parameter' `T`
                    )
                    'parameters': {
                    }
                    'result': | 'list' (
                        'node': | 'type parameter' `T`
                    )
                    'type parameters': {
                        `T`: ~
                    }
                )
                `flatten`: | 'operation' (
                    'context': | 'list' (
                        'node': | 'list' (
                            'node': | 'type parameter' `T`
                        )
                    )
                    'parameters': {
                    }
                    'result': | 'list' (
                        'node': | 'type parameter' `T`
                    )
                    'type parameters': {
                        `T`: ~
                    }
                )
            }
            `text`: | 'set' {
                `from list`: | 'operation' (
                    'context': | 'list' (
                        'node': | 'text' | 'local' (
                            'type': | 'single line' ~
                        )
                    )
                    'parameters': {
                    }
                    'result': | 'text' | 'local' (
                        'type': | 'single line' ~
                    )
                    'type parameters': {
                    }
                )
            }
        }
    }
    'schema tree': | 'set' {
        `ast`: | 'schema' (
            'complexity': | 'unconstrained' ~
            'globals': (
                'complexity': | 'unconstrained' ~
                'number types': {
                }
                'text types': {
                }
            )
            'imports': {
                `token`: (
                    'schema': ~
                    'schema set child': `token`
                )
            }
            'types': {
                `Concrete Value`: (
                    'node': | 'state group' {
                        `indexed collection`: | 'state group' {
                            `dictionary`: | 'group' {
                                `entries`: | 'component' | 'internal' `Key Value Pairs`
                                `{`: | 'component' | 'internal' `Structural Token`
                                `}`: | 'component' | 'internal' `Structural Token`
                            }
                            `verbose group`: | 'group' {
                                `(`: | 'component' | 'internal' `Structural Token`
                                `)`: | 'component' | 'internal' `Structural Token`
                                `entries`: | 'component' | 'internal' `Key Value Pairs`
                            }
                        }
                        `not set`: | 'group' {
                            `~`: | 'component' | 'internal' `Structural Token`
                        }
                        `ordered collection`: | 'state group' {
                            `concise group`: | 'group' {
                                `<`: | 'component' | 'internal' `Structural Token`
                                `>`: | 'component' | 'internal' `Structural Token`
                                `elements`: | 'component' | 'internal' `Elements`
                            }
                            `list`: | 'group' {
                                `[`: | 'component' | 'internal' `Structural Token`
                                `]`: | 'component' | 'internal' `Structural Token`
                                `elements`: | 'component' | 'internal' `Elements`
                            }
                        }
                        `set optional value`: | 'group' {
                            `*`: | 'component' | 'internal' `Structural Token`
                            `value`: | 'component' | 'internal cyclic' `Value`
                        }
                        `string`: | 'component' | 'internal' `String`
                        `tagged value`: | 'group' {
                            `state`: | 'component' | 'internal' `String`
                            `value`: | 'component' | 'internal cyclic' `Value`
                            `|`: | 'component' | 'internal' `Structural Token`
                        }
                    }
                    'type parameters': {
                    }
                )
                `Document`: (
                    'node': | 'group' {
                        `content`: | 'component' | 'internal' `Value`
                        `header`: | 'optional' | 'group' {
                            `!`: | 'component' | 'internal' `Structural Token`
                            `value`: | 'component' | 'internal' `Value`
                        }
                    }
                    'type parameters': {
                    }
                )
                `Elements`: (
                    'node': | 'list' (
                        'node': | 'group' {
                            `value`: | 'component' | 'internal cyclic' `Value`
                        }
                    )
                    'type parameters': {
                    }
                )
                `Key Value Pairs`: (
                    'node': | 'list' (
                        'node': | 'group' {
                            `,`: | 'optional' | 'component' | 'internal' `Structural Token`
                            `key`: | 'component' | 'internal' `String`
                            `value`: | 'optional' | 'group' {
                                `:`: | 'component' | 'internal' `Structural Token`
                                `value`: | 'component' | 'internal cyclic' `Value`
                            }
                        }
                    )
                    'type parameters': {
                    }
                )
                `String`: (
                    'node': | 'group' {
                        `range`: | 'component' | 'external' (
                            'import': `token`
                            'type': `Range`
                        )
                        `trailing trivia`: | 'component' | 'external' (
                            'import': `token`
                            'type': `Trivia`
                        )
                        `type`: | 'component' | 'external' (
                            'import': `token`
                            'type': `String Type`
                        )
                        `value`: | 'text' | 'local' (
                            'type': | 'single line' ~
                        )
                    }
                    'type parameters': {
                    }
                )
                `Structural Token`: (
                    'node': | 'group' {
                        `range`: | 'component' | 'external' (
                            'import': `token`
                            'type': `Range`
                        )
                        `trailing trivia`: | 'component' | 'external' (
                            'import': `token`
                            'type': `Trivia`
                        )
                    }
                    'type parameters': {
                    }
                )
                `Value`: (
                    'node': | 'group' {
                        `type`: | 'state group' {
                            `concrete`: | 'component' | 'internal' `Concrete Value`
                            `include`: | 'group' {
                                `@`: | 'component' | 'internal' `Structural Token`
                                `path`: | 'component' | 'internal' `String`
                            }
                            `missing data`: | 'group' {
                                `#`: | 'component' | 'internal' `Structural Token`
                            }
                        }
                    }
                    'type parameters': {
                    }
                )
            }
        )
        `module`: | 'schema' (
            'complexity': | 'constrained' (
                'resolvers': {
                    `Module`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `operations`: (
                                'definition': ~
                                'resolver': | 'component' (
                                    'arguments': * (
                                        'lookups': * {
                                        }
                                        'values': * {
                                        }
                                    )
                                    'constraints': {
                                    }
                                    'location': | 'internal' `Operations`
                                    'signature': ~
                                )
                            )
                            `schema tree`: (
                                'definition': ~
                                'resolver': | 'component' (
                                    'arguments': * (
                                        'lookups': * {
                                            `sibling schemas`: | 'empty stack' ~
                                        }
                                        'values': * {
                                        }
                                    )
                                    'constraints': {
                                    }
                                    'location': | 'external' (
                                        'import': `schema`
                                        'type': `Schema Tree`
                                    )
                                    'signature': ~
                                )
                            )
                        }
                    )
                    `Operations`: (
                        'signature': ~
                        'type resolver': | 'dictionary' (
                            'benchmark': ~
                            'definition': ~
                            'resolver': | 'state group' (
                                'definition': ~
                                'states': {
                                    `operation`: (
                                        'constraints': {
                                        }
                                        'resolver': | 'group' {
                                            `context`: (
                                                'definition': ~
                                                'resolver': | 'component' (
                                                    'arguments': * (
                                                        'lookups': * {
                                                            `noncircular sibling types`: | 'not set' ~
                                                            `possibly circular dependent sibling types`: | 'not set' ~
                                                        }
                                                        'values': * {
                                                            `globals`: | 'optional' | 'not set' ~
                                                            `imports`: | 'optional' | 'not set' ~
                                                            `type parameters`: | 'required' (
                                                                'resulting node': ~
                                                                'start': | 'sibling' `type parameters`
                                                                'tail': (
                                                                    'path': [ | 'component' ~ ]
                                                                    'resulting node': ~
                                                                )
                                                            )
                                                        }
                                                    )
                                                    'constraints': {
                                                    }
                                                    'location': | 'external' (
                                                        'import': `schema`
                                                        'type': `Type Node`
                                                    )
                                                    'signature': ~
                                                )
                                            )
                                            `parameters`: (
                                                'definition': ~
                                                'resolver': | 'dictionary' (
                                                    'benchmark': ~
                                                    'definition': ~
                                                    'resolver': | 'component' (
                                                        'arguments': * (
                                                            'lookups': * {
                                                                `noncircular sibling types`: | 'not set' ~
                                                                `possibly circular dependent sibling types`: | 'not set' ~
                                                            }
                                                            'values': * {
                                                                `globals`: | 'optional' | 'not set' ~
                                                                `imports`: | 'optional' | 'not set' ~
                                                                `type parameters`: | 'required' (
                                                                    'resulting node': ~
                                                                    'start': | 'sibling' `type parameters`
                                                                    'tail': (
                                                                        'path': [ | 'component' ~ ]
                                                                        'resulting node': ~
                                                                    )
                                                                )
                                                            }
                                                        )
                                                        'constraints': {
                                                        }
                                                        'location': | 'external' (
                                                            'import': `schema`
                                                            'type': `Type Node`
                                                        )
                                                        'signature': ~
                                                    )
                                                )
                                            )
                                            `result`: (
                                                'definition': ~
                                                'resolver': | 'component' (
                                                    'arguments': * (
                                                        'lookups': * {
                                                            `noncircular sibling types`: | 'not set' ~
                                                            `possibly circular dependent sibling types`: | 'not set' ~
                                                        }
                                                        'values': * {
                                                            `globals`: | 'optional' | 'not set' ~
                                                            `imports`: | 'optional' | 'not set' ~
                                                            `type parameters`: | 'required' (
                                                                'resulting node': ~
                                                                'start': | 'sibling' `type parameters`
                                                                'tail': (
                                                                    'path': [ | 'component' ~ ]
                                                                    'resulting node': ~
                                                                )
                                                            )
                                                        }
                                                    )
                                                    'constraints': {
                                                    }
                                                    'location': | 'external' (
                                                        'import': `schema`
                                                        'type': `Type Node`
                                                    )
                                                    'signature': ~
                                                )
                                            )
                                            `type parameters`: (
                                                'definition': ~
                                                'resolver': | 'component' (
                                                    'arguments': * (
                                                        'lookups': * {
                                                        }
                                                        'values': * {
                                                        }
                                                    )
                                                    'constraints': {
                                                    }
                                                    'location': | 'external' (
                                                        'import': `schema`
                                                        'type': `Type Parameters`
                                                    )
                                                    'signature': ~
                                                )
                                            )
                                        }
                                    )
                                    `set`: (
                                        'constraints': {
                                        }
                                        'resolver': | 'component' (
                                            'arguments': * (
                                                'lookups': ~
                                                'values': ~
                                            )
                                            'constraints': {
                                            }
                                            'location': | 'internal' `Operations`
                                            'signature': ~
                                        )
                                    )
                                }
                            )
                        )
                    )
                }
                'signatures': (
                    'types': {
                        `Module`: (
                            'parameters': | 'local' (
                                'lookups': {
                                }
                                'values': {
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Operations`: (
                            'parameters': | 'local' (
                                'lookups': {
                                }
                                'values': {
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                    }
                )
            )
            'globals': (
                'complexity': | 'unconstrained' ~
                'number types': {
                }
                'text types': {
                }
            )
            'imports': {
                `schema`: (
                    'schema': ~
                    'schema set child': `schema`
                )
            }
            'types': {
                `Module`: (
                    'node': | 'group' {
                        `operations`: | 'component' | 'internal' `Operations`
                        `schema tree`: | 'component' | 'external' (
                            'import': `schema`
                            'type': `Schema Tree`
                        )
                    }
                    'type parameters': {
                    }
                )
                `Operations`: (
                    'node': | 'dictionary' (
                        'node': | 'state group' {
                            `operation`: | 'group' {
                                `context`: | 'component' | 'external' (
                                    'import': `schema`
                                    'type': `Type Node`
                                )
                                `parameters`: | 'dictionary' (
                                    'node': | 'component' | 'external' (
                                        'import': `schema`
                                        'type': `Type Node`
                                    )
                                    'ordered': `false`
                                )
                                `result`: | 'component' | 'external' (
                                    'import': `schema`
                                    'type': `Type Node`
                                )
                                `type parameters`: | 'component' | 'external' (
                                    'import': `schema`
                                    'type': `Type Parameters`
                                )
                            }
                            `set`: | 'component' | 'internal cyclic' `Operations`
                        }
                        'ordered': `false`
                    )
                    'type parameters': {
                    }
                )
            }
        )
        `schema`: | 'schema' (
            'complexity': | 'constrained' (
                'resolvers': {
                    `Benchmark`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `dense`: (
                                'definition': ~
                                'resolver': | 'boolean' ~
                            )
                            `resulting dictionary`: (
                                'definition': ~
                                'resolver': | 'reference' (
                                    'definition': ~
                                    'type': | 'derived' (
                                        'value': (
                                            'resulting node': ~
                                            'start': | 'constraint' | 'component' (
                                                'constraint': `dictionary`
                                                'property': `selection`
                                            )
                                            'tail': (
                                                'path': [ ]
                                                'resulting node': ~
                                            )
                                        )
                                    )
                                )
                            )
                            `selection`: (
                                'definition': ~
                                'resolver': | 'component' (
                                    'arguments': * (
                                        'lookups': ~
                                        'values': ~
                                    )
                                    'constraints': {
                                        `dictionary`: (
                                            'constraint': (
                                                'selection': (
                                                    'path': [ | 'group' `resulting node` | 'reference' (
                                                        'definition': ~
                                                    ) ]
                                                    'resulting node': ~
                                                )
                                                'type': | 'state' (
                                                    'selected state group': ~
                                                    'state': `dictionary`
                                                )
                                            )
                                            'start': | 'property' ~
                                        )
                                    }
                                    'location': | 'internal' `Guaranteed Value Selection`
                                    'signature': ~
                                )
                            )
                        }
                    )
                    `Constraint`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `selection`: (
                                'definition': ~
                                'resolver': | 'component' (
                                    'arguments': * (
                                        'lookups': ~
                                        'values': ~
                                    )
                                    'constraints': {
                                    }
                                    'location': | 'internal' `Relative Value Selection`
                                    'signature': ~
                                )
                            )
                            `type`: (
                                'definition': ~
                                'resolver': | 'state group' (
                                    'definition': ~
                                    'states': {
                                        `optional value`: (
                                            'constraints': {
                                                `optional`: | 'state' (
                                                    'selected state group': ~
                                                    'selection': (
                                                        'resulting node': ~
                                                        'start': | 'sibling' `selection`
                                                        'tail': (
                                                            'path': [ | 'component' ~ | 'group' `resulting node` | 'reference' (
                                                                'definition': ~
                                                            ) ]
                                                            'resulting node': ~
                                                        )
                                                    )
                                                    'state': `state group`
                                                )
                                            }
                                            'resolver': | 'group' {
                                                `selected optional value`: (
                                                    'definition': ~
                                                    'resolver': | 'reference' (
                                                        'definition': ~
                                                        'type': | 'derived' (
                                                            'value': (
                                                                'resulting node': ~
                                                                'start': | 'option constraint' `optional`
                                                                'tail': (
                                                                    'path': [ ]
                                                                    'resulting node': ~
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            }
                                        )
                                        `state`: (
                                            'constraints': {
                                                `state group`: | 'state' (
                                                    'selected state group': ~
                                                    'selection': (
                                                        'resulting node': ~
                                                        'start': | 'sibling' `selection`
                                                        'tail': (
                                                            'path': [ | 'component' ~ | 'group' `resulting node` | 'reference' (
                                                                'definition': ~
                                                            ) ]
                                                            'resulting node': ~
                                                        )
                                                    )
                                                    'state': `state group`
                                                )
                                            }
                                            'resolver': | 'group' {
                                                `selected state group`: (
                                                    'definition': ~
                                                    'resolver': | 'reference' (
                                                        'definition': ~
                                                        'type': | 'derived' (
                                                            'value': (
                                                                'resulting node': ~
                                                                'start': | 'option constraint' `state group`
                                                                'tail': (
                                                                    'path': [ ]
                                                                    'resulting node': ~
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                                `state`: (
                                                    'definition': ~
                                                    'resolver': | 'reference' (
                                                        'definition': ~
                                                        'type': | 'selected' (
                                                            'constraints': {
                                                            }
                                                            'definition': ~
                                                            'lookup': (
                                                                'resulting dictionary': ~
                                                                'type': | 'dictionary' (
                                                                    'selected dictionary': ~
                                                                    'selection': (
                                                                        'resulting node': ~
                                                                        'start': | 'sibling' `selected state group`
                                                                        'tail': (
                                                                            'path': [ | 'reference' (
                                                                                'definition': ~
                                                                            ) ]
                                                                            'resulting node': ~
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            }
                                        )
                                    }
                                )
                            )
                        }
                    )
                    `Dictionary`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `node`: (
                                'definition': ~
                                'resolver': | 'component' (
                                    'arguments': * (
                                        'lookups': * {
                                            `noncircular sibling types`: | 'selection' (
                                                'resulting dictionary': ~
                                                'type': | 'parameter' `noncircular sibling types`
                                            )
                                            `possibly circular dependent sibling types`: | 'selection' (
                                                'resulting dictionary': ~
                                                'type': | 'parameter' `possibly circular dependent sibling types`
                                            )
                                        }
                                        'values': * {
                                            `globals`: | 'parameter' `globals`
                                            `imports`: | 'parameter' `imports`
                                            `type parameters`: | 'parameter' `type parameters`
                                        }
                                    )
                                    'constraints': {
                                    }
                                    'location': | 'internal' `Type Node`
                                    'signature': ~
                                )
                            )
                            `ordered`: (
                                'definition': ~
                                'resolver': | 'boolean' ~
                            )
                        }
                    )
                    `Globals`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `complexity`: (
                                'definition': ~
                                'resolver': | 'state group' (
                                    'definition': ~
                                    'states': {
                                        `constrained`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'nothing' ~
                                        )
                                        `unconstrained`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'nothing' ~
                                        )
                                    }
                                )
                            )
                            `number types`: (
                                'definition': ~
                                'resolver': | 'dictionary' (
                                    'benchmark': ~
                                    'definition': ~
                                    'resolver': | 'component' (
                                        'arguments': * (
                                            'lookups': * {
                                            }
                                            'values': * {
                                            }
                                        )
                                        'constraints': {
                                        }
                                        'location': | 'internal' `Number Type`
                                        'signature': ~
                                    )
                                )
                            )
                            `text types`: (
                                'definition': ~
                                'resolver': | 'dictionary' (
                                    'benchmark': ~
                                    'definition': ~
                                    'resolver': | 'component' (
                                        'arguments': * (
                                            'lookups': * {
                                            }
                                            'values': * {
                                            }
                                        )
                                        'constraints': {
                                        }
                                        'location': | 'internal' `Text Type`
                                        'signature': ~
                                    )
                                )
                            )
                        }
                    )
                    `Group`: (
                        'signature': ~
                        'type resolver': | 'dictionary' (
                            'benchmark': ~
                            'definition': ~
                            'resolver': | 'component' (
                                'arguments': * (
                                    'lookups': * {
                                        `noncircular sibling types`: | 'selection' (
                                            'resulting dictionary': ~
                                            'type': | 'parameter' `noncircular sibling types`
                                        )
                                        `possibly circular dependent sibling types`: | 'selection' (
                                            'resulting dictionary': ~
                                            'type': | 'parameter' `possibly circular dependent sibling types`
                                        )
                                    }
                                    'values': * {
                                        `globals`: | 'parameter' `globals`
                                        `imports`: | 'parameter' `imports`
                                        `type parameters`: | 'parameter' `type parameters`
                                    }
                                )
                                'constraints': {
                                }
                                'location': | 'internal' `Type Node`
                                'signature': ~
                            )
                        )
                    )
                    `Guaranteed Value Selection`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `resulting node`: (
                                'definition': ~
                                'resolver': | 'reference' (
                                    'definition': ~
                                    'type': | 'derived' (
                                        'value': (
                                            'resulting node': ~
                                            'start': | 'sibling' `tail`
                                            'tail': (
                                                'path': [ | 'component' ~ | 'group' `resulting node` | 'reference' (
                                                    'definition': ~
                                                ) ]
                                                'resulting node': ~
                                            )
                                        )
                                    )
                                )
                            )
                            `start`: (
                                'definition': ~
                                'resolver': | 'state group' (
                                    'definition': ~
                                    'states': {
                                        `constraint`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'state group' (
                                                'definition': ~
                                                'states': {
                                                    `component`: (
                                                        'constraints': {
                                                        }
                                                        'resolver': | 'group' {
                                                            `constraint`: (
                                                                'definition': ~
                                                                'resolver': | 'reference' (
                                                                    'definition': ~
                                                                    'type': | 'selected' (
                                                                        'constraints': {
                                                                        }
                                                                        'definition': ~
                                                                        'lookup': (
                                                                            'resulting dictionary': ~
                                                                            'type': | 'dictionary' (
                                                                                'selected dictionary': ~
                                                                                'selection': (
                                                                                    'resulting node': ~
                                                                                    'start': | 'constraint' | 'reference' (
                                                                                        'constraint': `component`
                                                                                        'property': `property`
                                                                                    )
                                                                                    'tail': (
                                                                                        'path': [ | 'group' `constraints` | 'component' ~ ]
                                                                                        'resulting node': ~
                                                                                    )
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                            `property`: (
                                                                'definition': ~
                                                                'resolver': | 'reference' (
                                                                    'definition': ~
                                                                    'type': | 'selected' (
                                                                        'constraints': {
                                                                            `component`: (
                                                                                'constraint': (
                                                                                    'selection': (
                                                                                        'path': [ | 'group' `resolver` | 'component' ~ ]
                                                                                        'resulting node': ~
                                                                                    )
                                                                                    'type': | 'state' (
                                                                                        'selected state group': ~
                                                                                        'state': `component`
                                                                                    )
                                                                                )
                                                                                'start': | 'property' ~
                                                                            )
                                                                        }
                                                                        'definition': ~
                                                                        'lookup': (
                                                                            'resulting dictionary': ~
                                                                            'type': | 'parameter' `sibling property resolvers`
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        }
                                                    )
                                                    `reference`: (
                                                        'constraints': {
                                                        }
                                                        'resolver': | 'group' {
                                                            `constraint`: (
                                                                'definition': ~
                                                                'resolver': | 'reference' (
                                                                    'definition': ~
                                                                    'type': | 'selected' (
                                                                        'constraints': {
                                                                        }
                                                                        'definition': ~
                                                                        'lookup': (
                                                                            'resulting dictionary': ~
                                                                            'type': | 'dictionary' (
                                                                                'selected dictionary': ~
                                                                                'selection': (
                                                                                    'resulting node': ~
                                                                                    'start': | 'constraint' | 'reference' (
                                                                                        'constraint': `selected`
                                                                                        'property': `property`
                                                                                    )
                                                                                    'tail': (
                                                                                        'path': [ | 'group' `constraints` | 'component' ~ ]
                                                                                        'resulting node': ~
                                                                                    )
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                            `property`: (
                                                                'definition': ~
                                                                'resolver': | 'reference' (
                                                                    'definition': ~
                                                                    'type': | 'selected' (
                                                                        'constraints': {
                                                                            `reference`: (
                                                                                'constraint': (
                                                                                    'selection': (
                                                                                        'path': [ | 'group' `resolver` | 'component' ~ ]
                                                                                        'resulting node': ~
                                                                                    )
                                                                                    'type': | 'state' (
                                                                                        'selected state group': ~
                                                                                        'state': `reference`
                                                                                    )
                                                                                )
                                                                                'start': | 'property' ~
                                                                            )
                                                                            `selected`: (
                                                                                'constraint': (
                                                                                    'selection': (
                                                                                        'path': [ | 'group' `type` ]
                                                                                        'resulting node': ~
                                                                                    )
                                                                                    'type': | 'state' (
                                                                                        'selected state group': ~
                                                                                        'state': `selected`
                                                                                    )
                                                                                )
                                                                                'start': | 'sibling' `reference`
                                                                            )
                                                                        }
                                                                        'definition': ~
                                                                        'lookup': (
                                                                            'resulting dictionary': ~
                                                                            'type': | 'parameter' `sibling property resolvers`
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        }
                                                    )
                                                }
                                            )
                                        )
                                        `linked entry`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'nothing' ~
                                        )
                                        `list cursor`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'nothing' ~
                                        )
                                        `option constraint`: (
                                            'constraints': {
                                                `oc`: | 'assert is set' | 'parameter' `option constraints`
                                            }
                                            'resolver': | 'reference' (
                                                'definition': ~
                                                'type': | 'selected' (
                                                    'constraints': {
                                                    }
                                                    'definition': ~
                                                    'lookup': (
                                                        'resulting dictionary': ~
                                                        'type': | 'dictionary' (
                                                            'selected dictionary': ~
                                                            'selection': (
                                                                'resulting node': ~
                                                                'start': | 'option constraint' `oc`
                                                                'tail': (
                                                                    'path': [ ]
                                                                    'resulting node': ~
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        `parameter`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'reference' (
                                                'definition': ~
                                                'type': | 'selected' (
                                                    'constraints': {
                                                    }
                                                    'definition': ~
                                                    'lookup': (
                                                        'resulting dictionary': ~
                                                        'type': | 'dictionary' (
                                                            'selected dictionary': ~
                                                            'selection': (
                                                                'resulting node': ~
                                                                'start': | 'parameter' `signature`
                                                                'tail': (
                                                                    'path': [ | 'group' `resolved parameters` | 'reference' (
                                                                        'definition': ~
                                                                    ) | 'group' `values` ]
                                                                    'resulting node': ~
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        `parent sibling`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'reference' (
                                                'definition': ~
                                                'type': | 'selected' (
                                                    'constraints': {
                                                    }
                                                    'definition': ~
                                                    'lookup': (
                                                        'resulting dictionary': ~
                                                        'type': | 'parameter' `parent sibling property resolvers`
                                                    )
                                                )
                                            )
                                        )
                                        `result`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'state group' (
                                                'definition': ~
                                                'states': {
                                                    `list`: (
                                                        'constraints': {
                                                        }
                                                        'resolver': | 'group' {
                                                            `list result`: (
                                                                'definition': ~
                                                                'resolver': | 'reference' (
                                                                    'definition': ~
                                                                    'type': | 'derived' (
                                                                        'value': (
                                                                            'resulting node': ~
                                                                            'start': | 'constraint' | 'reference' (
                                                                                'constraint': `result`
                                                                                'property': `property`
                                                                            )
                                                                            'tail': (
                                                                                'path': [ ]
                                                                                'resulting node': ~
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                            `property`: (
                                                                'definition': ~
                                                                'resolver': | 'reference' (
                                                                    'definition': ~
                                                                    'type': | 'selected' (
                                                                        'constraints': {
                                                                            `list`: (
                                                                                'constraint': (
                                                                                    'selection': (
                                                                                        'path': [ | 'group' `resolver` | 'component' ~ ]
                                                                                        'resulting node': ~
                                                                                    )
                                                                                    'type': | 'state' (
                                                                                        'selected state group': ~
                                                                                        'state': `list`
                                                                                    )
                                                                                )
                                                                                'start': | 'property' ~
                                                                            )
                                                                            `result`: (
                                                                                'constraint': (
                                                                                    'selection': (
                                                                                        'path': [ | 'group' `result` ]
                                                                                        'resulting node': ~
                                                                                    )
                                                                                    'type': | 'optional value' (
                                                                                        'selected optional value': ~
                                                                                    )
                                                                                )
                                                                                'start': | 'sibling' `list`
                                                                            )
                                                                        }
                                                                        'definition': ~
                                                                        'lookup': (
                                                                            'resulting dictionary': ~
                                                                            'type': | 'parameter' `sibling property resolvers`
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        }
                                                    )
                                                    `optional value`: (
                                                        'constraints': {
                                                        }
                                                        'resolver': | 'group' {
                                                            `optional value`: (
                                                                'definition': ~
                                                                'resolver': | 'reference' (
                                                                    'definition': ~
                                                                    'type': | 'derived' (
                                                                        'value': (
                                                                            'resulting node': ~
                                                                            'start': | 'constraint' | 'reference' (
                                                                                'constraint': `optional`
                                                                                'property': `property`
                                                                            )
                                                                            'tail': (
                                                                                'path': [ ]
                                                                                'resulting node': ~
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                            `property`: (
                                                                'definition': ~
                                                                'resolver': | 'reference' (
                                                                    'definition': ~
                                                                    'type': | 'selected' (
                                                                        'constraints': {
                                                                            `optional`: (
                                                                                'constraint': (
                                                                                    'selection': (
                                                                                        'path': [ | 'group' `resolver` | 'component' ~ ]
                                                                                        'resulting node': ~
                                                                                    )
                                                                                    'type': | 'state' (
                                                                                        'selected state group': ~
                                                                                        'state': `optional`
                                                                                    )
                                                                                )
                                                                                'start': | 'property' ~
                                                                            )
                                                                        }
                                                                        'definition': ~
                                                                        'lookup': (
                                                                            'resulting dictionary': ~
                                                                            'type': | 'parameter' `sibling property resolvers`
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                            `result`: (
                                                                'definition': ~
                                                                'resolver': | 'component' (
                                                                    'arguments': * (
                                                                        'lookups': * {
                                                                            `types`: | 'selection' (
                                                                                'resulting dictionary': ~
                                                                                'type': | 'dictionary' (
                                                                                    'selected dictionary': ~
                                                                                    'selection': (
                                                                                        'resulting node': ~
                                                                                        'start': | 'parameter' `types`
                                                                                        'tail': (
                                                                                            'path': [ ]
                                                                                            'resulting node': ~
                                                                                        )
                                                                                    )
                                                                                )
                                                                            )
                                                                        }
                                                                        'values': * {
                                                                            `imports`: | 'parameter' `imports`
                                                                        }
                                                                    )
                                                                    'constraints': {
                                                                    }
                                                                    'location': | 'internal' `Type Reference`
                                                                    'signature': ~
                                                                )
                                                            )
                                                        }
                                                    )
                                                    `state group`: (
                                                        'constraints': {
                                                        }
                                                        'resolver': | 'group' {
                                                            `property`: (
                                                                'definition': ~
                                                                'resolver': | 'reference' (
                                                                    'definition': ~
                                                                    'type': | 'selected' (
                                                                        'constraints': {
                                                                            `state group`: (
                                                                                'constraint': (
                                                                                    'selection': (
                                                                                        'path': [ | 'group' `resolver` | 'component' ~ ]
                                                                                        'resulting node': ~
                                                                                    )
                                                                                    'type': | 'state' (
                                                                                        'selected state group': ~
                                                                                        'state': `state group`
                                                                                    )
                                                                                )
                                                                                'start': | 'property' ~
                                                                            )
                                                                        }
                                                                        'definition': ~
                                                                        'lookup': (
                                                                            'resulting dictionary': ~
                                                                            'type': | 'parameter' `sibling property resolvers`
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                            `result`: (
                                                                'definition': ~
                                                                'resolver': | 'component' (
                                                                    'arguments': * (
                                                                        'lookups': * {
                                                                            `types`: | 'selection' (
                                                                                'resulting dictionary': ~
                                                                                'type': | 'dictionary' (
                                                                                    'selected dictionary': ~
                                                                                    'selection': (
                                                                                        'resulting node': ~
                                                                                        'start': | 'parameter' `types`
                                                                                        'tail': (
                                                                                            'path': [ ]
                                                                                            'resulting node': ~
                                                                                        )
                                                                                    )
                                                                                )
                                                                            )
                                                                        }
                                                                        'values': * {
                                                                            `imports`: | 'parameter' `imports`
                                                                        }
                                                                    )
                                                                    'constraints': {
                                                                    }
                                                                    'location': | 'internal' `Type Reference`
                                                                    'signature': ~
                                                                )
                                                            )
                                                            `state group`: (
                                                                'definition': ~
                                                                'resolver': | 'reference' (
                                                                    'definition': ~
                                                                    'type': | 'derived' (
                                                                        'value': (
                                                                            'resulting node': ~
                                                                            'start': | 'constraint' | 'reference' (
                                                                                'constraint': `state group`
                                                                                'property': `property`
                                                                            )
                                                                            'tail': (
                                                                                'path': [ ]
                                                                                'resulting node': ~
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        }
                                                    )
                                                }
                                            )
                                        )
                                        `sibling`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'reference' (
                                                'definition': ~
                                                'type': | 'selected' (
                                                    'constraints': {
                                                    }
                                                    'definition': ~
                                                    'lookup': (
                                                        'resulting dictionary': ~
                                                        'type': | 'parameter' `sibling property resolvers`
                                                    )
                                                )
                                            )
                                        )
                                    }
                                )
                            )
                            `tail`: (
                                'definition': ~
                                'resolver': | 'component' (
                                    'arguments': * (
                                        'lookups': * {
                                        }
                                        'values': * {
                                            `node`: | 'required' (
                                                'resulting node': ~
                                                'start': | 'result' | 'state group' (
                                                    'property': `start`
                                                    'result': (
                                                        'location': | 'internal' `Type Node`
                                                        'resulting node': ~
                                                    )
                                                    'state group': ~
                                                )
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                        }
                                    )
                                    'constraints': {
                                    }
                                    'location': | 'internal' `Relative Value Selection`
                                    'signature': ~
                                )
                            )
                        }
                    )
                    `Imports`: (
                        'signature': ~
                        'type resolver': | 'dictionary' (
                            'benchmark': ~
                            'definition': ~
                            'resolver': | 'group' {
                                `schema`: (
                                    'definition': ~
                                    'resolver': | 'reference' (
                                        'definition': ~
                                        'type': | 'derived' (
                                            'value': (
                                                'resulting node': ~
                                                'start': | 'constraint' | 'reference' (
                                                    'constraint': `schema`
                                                    'property': `schema set child`
                                                )
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                        )
                                    )
                                )
                                `schema set child`: (
                                    'definition': ~
                                    'resolver': | 'reference' (
                                        'definition': ~
                                        'type': | 'selected' (
                                            'constraints': {
                                                `schema`: (
                                                    'constraint': (
                                                        'selection': (
                                                            'path': [ | 'component' ~ ]
                                                            'resulting node': ~
                                                        )
                                                        'type': | 'state' (
                                                            'selected state group': ~
                                                            'state': `schema`
                                                        )
                                                    )
                                                    'start': | 'property' ~
                                                )
                                            }
                                            'definition': ~
                                            'lookup': (
                                                'resulting dictionary': ~
                                                'type': | 'parameter' `sibling schemas`
                                            )
                                        )
                                    )
                                )
                            }
                        )
                    )
                    `Lookup Selection`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `resulting dictionary`: (
                                'definition': ~
                                'resolver': | 'reference' (
                                    'definition': ~
                                    'type': | 'derived' (
                                        'value': (
                                            'resulting node': ~
                                            'start': | 'result' | 'state group' (
                                                'property': `type`
                                                'result': (
                                                    'location': | 'internal' `Dictionary`
                                                    'resulting node': ~
                                                )
                                                'state group': ~
                                            )
                                            'tail': (
                                                'path': [ ]
                                                'resulting node': ~
                                            )
                                        )
                                    )
                                )
                            )
                            `type`: (
                                'definition': ~
                                'resolver': | 'state group' (
                                    'definition': ~
                                    'states': {
                                        `dictionary`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'group' {
                                                `selected dictionary`: (
                                                    'definition': ~
                                                    'resolver': | 'reference' (
                                                        'definition': ~
                                                        'type': | 'derived' (
                                                            'value': (
                                                                'resulting node': ~
                                                                'start': | 'constraint' | 'component' (
                                                                    'constraint': `dictionary`
                                                                    'property': `selection`
                                                                )
                                                                'tail': (
                                                                    'path': [ ]
                                                                    'resulting node': ~
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                                `selection`: (
                                                    'definition': ~
                                                    'resolver': | 'component' (
                                                        'arguments': * (
                                                            'lookups': ~
                                                            'values': ~
                                                        )
                                                        'constraints': {
                                                            `dictionary`: (
                                                                'constraint': (
                                                                    'selection': (
                                                                        'path': [ | 'group' `resulting node` | 'reference' (
                                                                            'definition': ~
                                                                        ) ]
                                                                        'resulting node': ~
                                                                    )
                                                                    'type': | 'state' (
                                                                        'selected state group': ~
                                                                        'state': `dictionary`
                                                                    )
                                                                )
                                                                'start': | 'property' ~
                                                            )
                                                        }
                                                        'location': | 'internal' `Guaranteed Value Selection`
                                                        'signature': ~
                                                    )
                                                )
                                            }
                                        )
                                        `not circular dependent siblings`: (
                                            'constraints': {
                                                `cd`: | 'assert is set' | 'parameter' `current ordered dictionary`
                                            }
                                            'resolver': | 'reference' (
                                                'definition': ~
                                                'type': | 'derived' (
                                                    'value': (
                                                        'resulting node': ~
                                                        'start': | 'option constraint' `cd`
                                                        'tail': (
                                                            'path': [ ]
                                                            'resulting node': ~
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        `parameter`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'reference' (
                                                'definition': ~
                                                'type': | 'selected' (
                                                    'constraints': {
                                                    }
                                                    'definition': ~
                                                    'lookup': (
                                                        'resulting dictionary': ~
                                                        'type': | 'dictionary' (
                                                            'selected dictionary': ~
                                                            'selection': (
                                                                'resulting node': ~
                                                                'start': | 'parameter' `signature`
                                                                'tail': (
                                                                    'path': [ | 'group' `resolved parameters` | 'reference' (
                                                                        'definition': ~
                                                                    ) | 'group' `lookups` ]
                                                                    'resulting node': ~
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        `possibly circular dependent siblings`: (
                                            'constraints': {
                                                `cd`: | 'assert is set' | 'parameter' `current dictionary`
                                            }
                                            'resolver': | 'reference' (
                                                'definition': ~
                                                'type': | 'derived' (
                                                    'value': (
                                                        'resulting node': ~
                                                        'start': | 'option constraint' `cd`
                                                        'tail': (
                                                            'path': [ ]
                                                            'resulting node': ~
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    }
                                )
                            )
                        }
                    )
                    `Node Resolver`: (
                        'signature': ~
                        'type resolver': | 'state group' (
                            'definition': ~
                            'states': {
                                `boolean`: (
                                    'constraints': {
                                        `definition`: | 'state' (
                                            'selected state group': ~
                                            'selection': (
                                                'resulting node': ~
                                                'start': | 'parameter' `definition`
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                            'state': `boolean`
                                        )
                                    }
                                    'resolver': | 'nothing' ~
                                )
                                `component`: (
                                    'constraints': {
                                        `definition`: | 'state' (
                                            'selected state group': ~
                                            'selection': (
                                                'resulting node': ~
                                                'start': | 'parameter' `definition`
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                            'state': `component`
                                        )
                                    }
                                    'resolver': | 'group' {
                                        `arguments`: (
                                            'definition': ~
                                            'resolver': | 'optional' (
                                                'constraints': {
                                                }
                                                'resolver': | 'group' {
                                                    `lookups`: (
                                                        'definition': ~
                                                        'resolver': | 'optional' (
                                                            'constraints': {
                                                            }
                                                            'resolver': | 'dictionary' (
                                                                'benchmark': * (
                                                                    'dense': `true`
                                                                    'resulting dictionary': ~
                                                                    'selection': (
                                                                        'resulting node': ~
                                                                        'start': | 'parent sibling' `signature`
                                                                        'tail': (
                                                                            'path': [ | 'reference' (
                                                                                'definition': ~
                                                                            ) | 'component' ~ | 'group' `resolved parameters` | 'reference' (
                                                                                'definition': ~
                                                                            ) | 'group' `lookups` ]
                                                                            'resulting node': ~
                                                                        )
                                                                    )
                                                                )
                                                                'definition': ~
                                                                'resolver': | 'state group' (
                                                                    'definition': ~
                                                                    'states': {
                                                                        `empty stack`: (
                                                                            'constraints': {
                                                                            }
                                                                            'resolver': | 'nothing' ~
                                                                        )
                                                                        `not set`: (
                                                                            'constraints': {
                                                                            }
                                                                            'resolver': | 'nothing' ~
                                                                        )
                                                                        `selection`: (
                                                                            'constraints': {
                                                                            }
                                                                            'resolver': | 'component' (
                                                                                'arguments': * (
                                                                                    'lookups': ~
                                                                                    'values': ~
                                                                                )
                                                                                'constraints': {
                                                                                }
                                                                                'location': | 'internal' `Lookup Selection`
                                                                                'signature': ~
                                                                            )
                                                                        )
                                                                        `stack`: (
                                                                            'constraints': {
                                                                            }
                                                                            'resolver': | 'group' {
                                                                                `element`: (
                                                                                    'definition': ~
                                                                                    'resolver': | 'component' (
                                                                                        'arguments': * (
                                                                                            'lookups': ~
                                                                                            'values': ~
                                                                                        )
                                                                                        'constraints': {
                                                                                        }
                                                                                        'location': | 'internal' `Lookup Selection`
                                                                                        'signature': ~
                                                                                    )
                                                                                )
                                                                                `stack`: (
                                                                                    'definition': ~
                                                                                    'resolver': | 'component' (
                                                                                        'arguments': * (
                                                                                            'lookups': ~
                                                                                            'values': ~
                                                                                        )
                                                                                        'constraints': {
                                                                                        }
                                                                                        'location': | 'internal' `Lookup Selection`
                                                                                        'signature': ~
                                                                                    )
                                                                                )
                                                                            }
                                                                        )
                                                                    }
                                                                )
                                                            )
                                                        )
                                                    )
                                                    `values`: (
                                                        'definition': ~
                                                        'resolver': | 'optional' (
                                                            'constraints': {
                                                            }
                                                            'resolver': | 'dictionary' (
                                                                'benchmark': * (
                                                                    'dense': `true`
                                                                    'resulting dictionary': ~
                                                                    'selection': (
                                                                        'resulting node': ~
                                                                        'start': | 'parent sibling' `signature`
                                                                        'tail': (
                                                                            'path': [ | 'reference' (
                                                                                'definition': ~
                                                                            ) | 'component' ~ | 'group' `resolved parameters` | 'reference' (
                                                                                'definition': ~
                                                                            ) | 'group' `values` ]
                                                                            'resulting node': ~
                                                                        )
                                                                    )
                                                                )
                                                                'definition': ~
                                                                'resolver': | 'state group' (
                                                                    'definition': ~
                                                                    'states': {
                                                                        `optional`: (
                                                                            'constraints': {
                                                                            }
                                                                            'resolver': | 'component' (
                                                                                'arguments': * (
                                                                                    'lookups': ~
                                                                                    'values': ~
                                                                                )
                                                                                'constraints': {
                                                                                }
                                                                                'location': | 'internal' `Optional Value Initialization`
                                                                                'signature': ~
                                                                            )
                                                                        )
                                                                        `parameter`: (
                                                                            'constraints': {
                                                                            }
                                                                            'resolver': | 'reference' (
                                                                                'definition': ~
                                                                                'type': | 'selected' (
                                                                                    'constraints': {
                                                                                    }
                                                                                    'definition': ~
                                                                                    'lookup': (
                                                                                        'resulting dictionary': ~
                                                                                        'type': | 'dictionary' (
                                                                                            'selected dictionary': ~
                                                                                            'selection': (
                                                                                                'resulting node': ~
                                                                                                'start': | 'parameter' `signature`
                                                                                                'tail': (
                                                                                                    'path': [ | 'group' `resolved parameters` | 'reference' (
                                                                                                        'definition': ~
                                                                                                    ) | 'group' `values` ]
                                                                                                    'resulting node': ~
                                                                                                )
                                                                                            )
                                                                                        )
                                                                                    )
                                                                                )
                                                                            )
                                                                        )
                                                                        `required`: (
                                                                            'constraints': {
                                                                            }
                                                                            'resolver': | 'component' (
                                                                                'arguments': * (
                                                                                    'lookups': ~
                                                                                    'values': ~
                                                                                )
                                                                                'constraints': {
                                                                                }
                                                                                'location': | 'internal' `Guaranteed Value Selection`
                                                                                'signature': ~
                                                                            )
                                                                        )
                                                                    }
                                                                )
                                                            )
                                                        )
                                                    )
                                                }
                                            )
                                        )
                                        `constraints`: (
                                            'definition': ~
                                            'resolver': | 'component' (
                                                'arguments': * (
                                                    'lookups': * {
                                                    }
                                                    'values': * {
                                                        `node`: | 'required' (
                                                            'resulting node': ~
                                                            'start': | 'sibling' `signature`
                                                            'tail': (
                                                                'path': [ | 'reference' (
                                                                    'definition': ~
                                                                ) | 'component' ~ | 'group' `type` | 'reference' (
                                                                    'definition': ~
                                                                ) | 'group' `node` | 'component' ~ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                    }
                                                )
                                                'constraints': {
                                                }
                                                'location': | 'internal' `Property Constraints`
                                                'signature': ~
                                            )
                                        )
                                        `location`: (
                                            'definition': ~
                                            'resolver': | 'state group' (
                                                'definition': ~
                                                'states': {
                                                    `external`: (
                                                        'constraints': {
                                                            `import`: | 'assert is set' | 'parameter' `imports`
                                                        }
                                                        'resolver': | 'group' {
                                                            `import`: (
                                                                'definition': ~
                                                                'resolver': | 'reference' (
                                                                    'definition': ~
                                                                    'type': | 'selected' (
                                                                        'constraints': {
                                                                            `constrained`: (
                                                                                'constraint': (
                                                                                    'selection': (
                                                                                        'path': [ | 'group' `schema` | 'reference' (
                                                                                            'definition': ~
                                                                                        ) | 'group' `complexity` ]
                                                                                        'resulting node': ~
                                                                                    )
                                                                                    'type': | 'state' (
                                                                                        'selected state group': ~
                                                                                        'state': `constrained`
                                                                                    )
                                                                                )
                                                                                'start': | 'property' ~
                                                                            )
                                                                        }
                                                                        'definition': ~
                                                                        'lookup': (
                                                                            'resulting dictionary': ~
                                                                            'type': | 'dictionary' (
                                                                                'selected dictionary': ~
                                                                                'selection': (
                                                                                    'resulting node': ~
                                                                                    'start': | 'option constraint' `import`
                                                                                    'tail': (
                                                                                        'path': [ ]
                                                                                        'resulting node': ~
                                                                                    )
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                            `type`: (
                                                                'definition': ~
                                                                'resolver': | 'reference' (
                                                                    'definition': ~
                                                                    'type': | 'selected' (
                                                                        'constraints': {
                                                                        }
                                                                        'definition': ~
                                                                        'lookup': (
                                                                            'resulting dictionary': ~
                                                                            'type': | 'dictionary' (
                                                                                'selected dictionary': ~
                                                                                'selection': (
                                                                                    'resulting node': ~
                                                                                    'start': | 'constraint' | 'reference' (
                                                                                        'constraint': `constrained`
                                                                                        'property': `import`
                                                                                    )
                                                                                    'tail': (
                                                                                        'path': [ | 'component' ~ | 'group' `signatures` | 'group' `types` | 'component' ~ ]
                                                                                        'resulting node': ~
                                                                                    )
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        }
                                                    )
                                                    `internal`: (
                                                        'constraints': {
                                                        }
                                                        'resolver': | 'reference' (
                                                            'definition': ~
                                                            'type': | 'selected' (
                                                                'constraints': {
                                                                }
                                                                'definition': ~
                                                                'lookup': (
                                                                    'resulting dictionary': ~
                                                                    'type': | 'dictionary' (
                                                                        'selected dictionary': ~
                                                                        'selection': (
                                                                            'resulting node': ~
                                                                            'start': | 'parameter' `signatures`
                                                                            'tail': (
                                                                                'path': [ ]
                                                                                'resulting node': ~
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                }
                                            )
                                        )
                                        `signature`: (
                                            'definition': ~
                                            'resolver': | 'reference' (
                                                'definition': ~
                                                'type': | 'derived' (
                                                    'value': (
                                                        'resulting node': ~
                                                        'start': | 'result' | 'state group' (
                                                            'property': `location`
                                                            'result': (
                                                                'location': | 'internal' `Signature`
                                                                'resulting node': ~
                                                            )
                                                            'state group': ~
                                                        )
                                                        'tail': (
                                                            'path': [ ]
                                                            'resulting node': ~
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    }
                                )
                                `dictionary`: (
                                    'constraints': {
                                        `definition`: | 'state' (
                                            'selected state group': ~
                                            'selection': (
                                                'resulting node': ~
                                                'start': | 'parameter' `definition`
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                            'state': `dictionary`
                                        )
                                    }
                                    'resolver': | 'group' {
                                        `benchmark`: (
                                            'definition': ~
                                            'resolver': | 'optional' (
                                                'constraints': {
                                                }
                                                'resolver': | 'component' (
                                                    'arguments': * (
                                                        'lookups': ~
                                                        'values': ~
                                                    )
                                                    'constraints': {
                                                    }
                                                    'location': | 'internal' `Benchmark`
                                                    'signature': ~
                                                )
                                            )
                                        )
                                        `definition`: (
                                            'definition': ~
                                            'resolver': | 'reference' (
                                                'definition': ~
                                                'type': | 'derived' (
                                                    'value': (
                                                        'resulting node': ~
                                                        'start': | 'option constraint' `definition`
                                                        'tail': (
                                                            'path': [ ]
                                                            'resulting node': ~
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        `resolver`: (
                                            'definition': ~
                                            'resolver': | 'component' (
                                                'arguments': * (
                                                    'lookups': ~
                                                    'values': * {
                                                        `current dictionary`: | 'optional' | 'set' (
                                                            'resulting node': ~
                                                            'start': | 'sibling' `definition`
                                                            'tail': (
                                                                'path': [ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        `current ordered dictionary`: | 'optional' | 'set' (
                                                            'resulting node': ~
                                                            'start': | 'sibling' `definition`
                                                            'tail': (
                                                                'path': [ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        `definition`: | 'required' (
                                                            'resulting node': ~
                                                            'start': | 'sibling' `definition`
                                                            'tail': (
                                                                'path': [ | 'reference' (
                                                                    'definition': ~
                                                                ) | 'group' `node` ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        `imports`: | 'parameter' `imports`
                                                        `linked entry`: | 'optional' | 'selection' | 'result' | 'optional value' (
                                                            'optional value': ~
                                                            'property': `benchmark`
                                                            'result': (
                                                                'location': | 'internal' `Benchmark`
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        `list cursor`: | 'parameter' `list cursor`
                                                        `option constraints`: | 'parameter' `option constraints`
                                                        `signature`: | 'parameter' `signature`
                                                        `signatures`: | 'parameter' `signatures`
                                                        `types`: | 'parameter' `types`
                                                    }
                                                )
                                                'constraints': {
                                                }
                                                'location': | 'internal' `Node Resolver`
                                                'signature': ~
                                            )
                                        )
                                    }
                                )
                                `group`: (
                                    'constraints': {
                                        `definition`: | 'state' (
                                            'selected state group': ~
                                            'selection': (
                                                'resulting node': ~
                                                'start': | 'parameter' `definition`
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                            'state': `group`
                                        )
                                    }
                                    'resolver': | 'component' (
                                        'arguments': * (
                                            'lookups': * {
                                                `parent sibling property resolvers`: | 'selection' (
                                                    'resulting dictionary': ~
                                                    'type': | 'parameter' `sibling property resolvers`
                                                )
                                                `sibling property resolvers`: | 'selection' (
                                                    'resulting dictionary': ~
                                                    'type': | 'parameter' `sibling property resolvers`
                                                )
                                            }
                                            'values': * {
                                                `current dictionary`: | 'parameter' `current dictionary`
                                                `current ordered dictionary`: | 'parameter' `current ordered dictionary`
                                                `definition`: | 'required' (
                                                    'resulting node': ~
                                                    'start': | 'option constraint' `definition`
                                                    'tail': (
                                                        'path': [ ]
                                                        'resulting node': ~
                                                    )
                                                )
                                                `imports`: | 'parameter' `imports`
                                                `linked entry`: | 'parameter' `linked entry`
                                                `list cursor`: | 'parameter' `list cursor`
                                                `option constraints`: | 'parameter' `option constraints`
                                                `signature`: | 'parameter' `signature`
                                                `signatures`: | 'parameter' `signatures`
                                                `types`: | 'parameter' `types`
                                            }
                                        )
                                        'constraints': {
                                        }
                                        'location': | 'internal' `Node Resolver Group`
                                        'signature': ~
                                    )
                                )
                                `identifier value pair`: (
                                    'constraints': {
                                        `definition`: | 'state' (
                                            'selected state group': ~
                                            'selection': (
                                                'resulting node': ~
                                                'start': | 'parameter' `definition`
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                            'state': `identifier value pair`
                                        )
                                    }
                                    'resolver': | 'component' (
                                        'arguments': * (
                                            'lookups': ~
                                            'values': * {
                                                `current dictionary`: | 'parameter' `current dictionary`
                                                `current ordered dictionary`: | 'parameter' `current ordered dictionary`
                                                `definition`: | 'required' (
                                                    'resulting node': ~
                                                    'start': | 'option constraint' `definition`
                                                    'tail': (
                                                        'path': [ | 'component' ~ ]
                                                        'resulting node': ~
                                                    )
                                                )
                                                `imports`: | 'parameter' `imports`
                                                `linked entry`: | 'parameter' `linked entry`
                                                `list cursor`: | 'parameter' `list cursor`
                                                `option constraints`: | 'parameter' `option constraints`
                                                `signature`: | 'parameter' `signature`
                                                `signatures`: | 'parameter' `signatures`
                                                `types`: | 'parameter' `types`
                                            }
                                        )
                                        'constraints': {
                                        }
                                        'location': | 'internal' `Node Resolver`
                                        'signature': ~
                                    )
                                )
                                `list`: (
                                    'constraints': {
                                        `definition`: | 'state' (
                                            'selected state group': ~
                                            'selection': (
                                                'resulting node': ~
                                                'start': | 'parameter' `definition`
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                            'state': `list`
                                        )
                                    }
                                    'resolver': | 'group' {
                                        `definition`: (
                                            'definition': ~
                                            'resolver': | 'reference' (
                                                'definition': ~
                                                'type': | 'derived' (
                                                    'value': (
                                                        'resulting node': ~
                                                        'start': | 'option constraint' `definition`
                                                        'tail': (
                                                            'path': [ ]
                                                            'resulting node': ~
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        `resolver`: (
                                            'definition': ~
                                            'resolver': | 'component' (
                                                'arguments': * (
                                                    'lookups': ~
                                                    'values': * {
                                                        `current dictionary`: | 'parameter' `current dictionary`
                                                        `current ordered dictionary`: | 'parameter' `current ordered dictionary`
                                                        `definition`: | 'required' (
                                                            'resulting node': ~
                                                            'start': | 'option constraint' `definition`
                                                            'tail': (
                                                                'path': [ | 'group' `node` ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        `imports`: | 'parameter' `imports`
                                                        `linked entry`: | 'parameter' `linked entry`
                                                        `list cursor`: | 'optional' | 'set' (
                                                            'resulting node': ~
                                                            'start': | 'result' | 'optional value' (
                                                                'optional value': ~
                                                                'property': `result`
                                                                'result': (
                                                                    'location': | 'internal' `Node Resolver List Result`
                                                                    'resulting node': ~
                                                                )
                                                            )
                                                            'tail': (
                                                                'path': [ | 'component' ~ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        `option constraints`: | 'parameter' `option constraints`
                                                        `signature`: | 'parameter' `signature`
                                                        `signatures`: | 'parameter' `signatures`
                                                        `types`: | 'parameter' `types`
                                                    }
                                                )
                                                'constraints': {
                                                }
                                                'location': | 'internal' `Node Resolver`
                                                'signature': ~
                                            )
                                        )
                                        `result`: (
                                            'definition': ~
                                            'resolver': | 'optional' (
                                                'constraints': {
                                                }
                                                'resolver': | 'component' (
                                                    'arguments': * (
                                                        'lookups': * {
                                                            `types`: | 'selection' (
                                                                'resulting dictionary': ~
                                                                'type': | 'dictionary' (
                                                                    'selected dictionary': ~
                                                                    'selection': (
                                                                        'resulting node': ~
                                                                        'start': | 'parameter' `types`
                                                                        'tail': (
                                                                            'path': [ ]
                                                                            'resulting node': ~
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        }
                                                        'values': * {
                                                            `imports`: | 'parameter' `imports`
                                                        }
                                                    )
                                                    'constraints': {
                                                    }
                                                    'location': | 'internal' `Node Resolver List Result`
                                                    'signature': ~
                                                )
                                            )
                                        )
                                    }
                                )
                                `nothing`: (
                                    'constraints': {
                                        `definition`: | 'state' (
                                            'selected state group': ~
                                            'selection': (
                                                'resulting node': ~
                                                'start': | 'parameter' `definition`
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                            'state': `nothing`
                                        )
                                    }
                                    'resolver': | 'nothing' ~
                                )
                                `number`: (
                                    'constraints': {
                                        `definition`: | 'state' (
                                            'selected state group': ~
                                            'selection': (
                                                'resulting node': ~
                                                'start': | 'parameter' `definition`
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                            'state': `number`
                                        )
                                    }
                                    'resolver': | 'nothing' ~
                                )
                                `optional`: (
                                    'constraints': {
                                        `definition`: | 'state' (
                                            'selected state group': ~
                                            'selection': (
                                                'resulting node': ~
                                                'start': | 'parameter' `definition`
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                            'state': `optional`
                                        )
                                    }
                                    'resolver': | 'group' {
                                        `constraints`: (
                                            'definition': ~
                                            'resolver': | 'component' (
                                                'arguments': * (
                                                    'lookups': ~
                                                    'values': ~
                                                )
                                                'constraints': {
                                                }
                                                'location': | 'internal' `Option Constraints`
                                                'signature': ~
                                            )
                                        )
                                        `resolver`: (
                                            'definition': ~
                                            'resolver': | 'component' (
                                                'arguments': * (
                                                    'lookups': ~
                                                    'values': * {
                                                        `current dictionary`: | 'parameter' `current dictionary`
                                                        `current ordered dictionary`: | 'parameter' `current ordered dictionary`
                                                        `definition`: | 'required' (
                                                            'resulting node': ~
                                                            'start': | 'option constraint' `definition`
                                                            'tail': (
                                                                'path': [ | 'component' ~ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        `imports`: | 'parameter' `imports`
                                                        `linked entry`: | 'parameter' `linked entry`
                                                        `list cursor`: | 'parameter' `list cursor`
                                                        `option constraints`: | 'parameter' `option constraints`
                                                        `signature`: | 'parameter' `signature`
                                                        `signatures`: | 'parameter' `signatures`
                                                        `types`: | 'parameter' `types`
                                                    }
                                                )
                                                'constraints': {
                                                }
                                                'location': | 'internal' `Node Resolver`
                                                'signature': ~
                                            )
                                        )
                                    }
                                )
                                `reference`: (
                                    'constraints': {
                                        `definition`: | 'state' (
                                            'selected state group': ~
                                            'selection': (
                                                'resulting node': ~
                                                'start': | 'parameter' `definition`
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                            'state': `reference`
                                        )
                                    }
                                    'resolver': | 'group' {
                                        `definition`: (
                                            'definition': ~
                                            'resolver': | 'reference' (
                                                'definition': ~
                                                'type': | 'derived' (
                                                    'value': (
                                                        'resulting node': ~
                                                        'start': | 'option constraint' `definition`
                                                        'tail': (
                                                            'path': [ ]
                                                            'resulting node': ~
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        `type`: (
                                            'definition': ~
                                            'resolver': | 'state group' (
                                                'definition': ~
                                                'states': {
                                                    `derived`: (
                                                        'constraints': {
                                                            `definition`: | 'state' (
                                                                'selected state group': ~
                                                                'selection': (
                                                                    'resulting node': ~
                                                                    'start': | 'sibling' `definition`
                                                                    'tail': (
                                                                        'path': [ | 'reference' (
                                                                            'definition': ~
                                                                        ) | 'group' `type` ]
                                                                        'resulting node': ~
                                                                    )
                                                                )
                                                                'state': `derived`
                                                            )
                                                        }
                                                        'resolver': | 'group' {
                                                            `value`: (
                                                                'definition': ~
                                                                'resolver': | 'component' (
                                                                    'arguments': * (
                                                                        'lookups': ~
                                                                        'values': ~
                                                                    )
                                                                    'constraints': {
                                                                    }
                                                                    'location': | 'internal' `Guaranteed Value Selection`
                                                                    'signature': ~
                                                                )
                                                            )
                                                        }
                                                    )
                                                    `selected`: (
                                                        'constraints': {
                                                            `definition`: | 'state' (
                                                                'selected state group': ~
                                                                'selection': (
                                                                    'resulting node': ~
                                                                    'start': | 'sibling' `definition`
                                                                    'tail': (
                                                                        'path': [ | 'reference' (
                                                                            'definition': ~
                                                                        ) | 'group' `type` ]
                                                                        'resulting node': ~
                                                                    )
                                                                )
                                                                'state': `selected`
                                                            )
                                                        }
                                                        'resolver': | 'group' {
                                                            `constraints`: (
                                                                'definition': ~
                                                                'resolver': | 'component' (
                                                                    'arguments': * (
                                                                        'lookups': * {
                                                                        }
                                                                        'values': * {
                                                                            `node`: | 'required' (
                                                                                'resulting node': ~
                                                                                'start': | 'sibling' `lookup`
                                                                                'tail': (
                                                                                    'path': [ | 'component' ~ | 'group' `resulting dictionary` | 'reference' (
                                                                                        'definition': ~
                                                                                    ) | 'group' `node` ]
                                                                                    'resulting node': ~
                                                                                )
                                                                            )
                                                                        }
                                                                    )
                                                                    'constraints': {
                                                                    }
                                                                    'location': | 'internal' `Property Constraints`
                                                                    'signature': ~
                                                                )
                                                            )
                                                            `definition`: (
                                                                'definition': ~
                                                                'resolver': | 'reference' (
                                                                    'definition': ~
                                                                    'type': | 'derived' (
                                                                        'value': (
                                                                            'resulting node': ~
                                                                            'start': | 'option constraint' `definition`
                                                                            'tail': (
                                                                                'path': [ ]
                                                                                'resulting node': ~
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                            `lookup`: (
                                                                'definition': ~
                                                                'resolver': | 'component' (
                                                                    'arguments': * (
                                                                        'lookups': ~
                                                                        'values': ~
                                                                    )
                                                                    'constraints': {
                                                                    }
                                                                    'location': | 'internal' `Lookup Selection`
                                                                    'signature': ~
                                                                )
                                                            )
                                                        }
                                                    )
                                                }
                                            )
                                        )
                                    }
                                )
                                `state group`: (
                                    'constraints': {
                                        `definition`: | 'state' (
                                            'selected state group': ~
                                            'selection': (
                                                'resulting node': ~
                                                'start': | 'parameter' `definition`
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                            'state': `state group`
                                        )
                                    }
                                    'resolver': | 'group' {
                                        `definition`: (
                                            'definition': ~
                                            'resolver': | 'reference' (
                                                'definition': ~
                                                'type': | 'derived' (
                                                    'value': (
                                                        'resulting node': ~
                                                        'start': | 'option constraint' `definition`
                                                        'tail': (
                                                            'path': [ ]
                                                            'resulting node': ~
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        `states`: (
                                            'definition': ~
                                            'resolver': | 'dictionary' (
                                                'benchmark': * (
                                                    'dense': `true`
                                                    'resulting dictionary': ~
                                                    'selection': (
                                                        'resulting node': ~
                                                        'start': | 'option constraint' `definition`
                                                        'tail': (
                                                            'path': [ ]
                                                            'resulting node': ~
                                                        )
                                                    )
                                                )
                                                'definition': ~
                                                'resolver': | 'group' {
                                                    `constraints`: (
                                                        'definition': ~
                                                        'resolver': | 'component' (
                                                            'arguments': * (
                                                                'lookups': ~
                                                                'values': ~
                                                            )
                                                            'constraints': {
                                                            }
                                                            'location': | 'internal' `Option Constraints`
                                                            'signature': ~
                                                        )
                                                    )
                                                    `resolver`: (
                                                        'definition': ~
                                                        'resolver': | 'component' (
                                                            'arguments': * (
                                                                'lookups': ~
                                                                'values': * {
                                                                    `current dictionary`: | 'parameter' `current dictionary`
                                                                    `current ordered dictionary`: | 'parameter' `current ordered dictionary`
                                                                    `definition`: | 'required' (
                                                                        'resulting node': ~
                                                                        'start': | 'linked entry' ~
                                                                        'tail': (
                                                                            'path': [ ]
                                                                            'resulting node': ~
                                                                        )
                                                                    )
                                                                    `imports`: | 'parameter' `imports`
                                                                    `linked entry`: | 'parameter' `linked entry`
                                                                    `list cursor`: | 'parameter' `list cursor`
                                                                    `option constraints`: | 'parameter' `option constraints`
                                                                    `signature`: | 'parameter' `signature`
                                                                    `signatures`: | 'parameter' `signatures`
                                                                    `types`: | 'parameter' `types`
                                                                }
                                                            )
                                                            'constraints': {
                                                            }
                                                            'location': | 'internal' `Node Resolver`
                                                            'signature': ~
                                                        )
                                                    )
                                                }
                                            )
                                        )
                                    }
                                )
                                `text`: (
                                    'constraints': {
                                        `definition`: | 'state' (
                                            'selected state group': ~
                                            'selection': (
                                                'resulting node': ~
                                                'start': | 'parameter' `definition`
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                            'state': `text`
                                        )
                                    }
                                    'resolver': | 'nothing' ~
                                )
                                `type parameter`: (
                                    'constraints': {
                                        `definition`: | 'state' (
                                            'selected state group': ~
                                            'selection': (
                                                'resulting node': ~
                                                'start': | 'parameter' `definition`
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                            'state': `type parameter`
                                        )
                                    }
                                    'resolver': | 'nothing' ~
                                )
                            }
                        )
                    )
                    `Node Resolver Group`: (
                        'signature': ~
                        'type resolver': | 'dictionary' (
                            'benchmark': * (
                                'dense': `true`
                                'resulting dictionary': ~
                                'selection': (
                                    'resulting node': ~
                                    'start': | 'parameter' `definition`
                                    'tail': (
                                        'path': [ ]
                                        'resulting node': ~
                                    )
                                )
                            )
                            'definition': ~
                            'resolver': | 'group' {
                                `definition`: (
                                    'definition': ~
                                    'resolver': | 'reference' (
                                        'definition': ~
                                        'type': | 'derived' (
                                            'value': (
                                                'resulting node': ~
                                                'start': | 'linked entry' ~
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                        )
                                    )
                                )
                                `resolver`: (
                                    'definition': ~
                                    'resolver': | 'component' (
                                        'arguments': * (
                                            'lookups': * {
                                                `parent sibling property resolvers`: | 'selection' (
                                                    'resulting dictionary': ~
                                                    'type': | 'parameter' `sibling property resolvers`
                                                )
                                                `sibling property resolvers`: | 'selection' (
                                                    'resulting dictionary': ~
                                                    'type': | 'not circular dependent siblings' ~
                                                )
                                            }
                                            'values': * {
                                                `current dictionary`: | 'parameter' `current dictionary`
                                                `current ordered dictionary`: | 'parameter' `current ordered dictionary`
                                                `definition`: | 'required' (
                                                    'resulting node': ~
                                                    'start': | 'linked entry' ~
                                                    'tail': (
                                                        'path': [ | 'component' ~ ]
                                                        'resulting node': ~
                                                    )
                                                )
                                                `imports`: | 'parameter' `imports`
                                                `linked entry`: | 'parameter' `linked entry`
                                                `list cursor`: | 'parameter' `list cursor`
                                                `option constraints`: | 'parameter' `option constraints`
                                                `signature`: | 'parameter' `signature`
                                                `signatures`: | 'parameter' `signatures`
                                                `types`: | 'parameter' `types`
                                            }
                                        )
                                        'constraints': {
                                        }
                                        'location': | 'internal' `Node Resolver`
                                        'signature': ~
                                    )
                                )
                            }
                        )
                    )
                    `Node Resolver List Result`: (
                        'signature': ~
                        'type resolver': | 'component' (
                            'arguments': * (
                                'lookups': * {
                                    `types`: | 'selection' (
                                        'resulting dictionary': ~
                                        'type': | 'parameter' `types`
                                    )
                                }
                                'values': * {
                                    `imports`: | 'parameter' `imports`
                                }
                            )
                            'constraints': {
                            }
                            'location': | 'internal' `Type Reference`
                            'signature': ~
                        )
                    )
                    `Number Type`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `precision`: (
                                'definition': ~
                                'resolver': | 'state group' (
                                    'definition': ~
                                    'states': {
                                        `approximation`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'group' {
                                                `significant digits`: (
                                                    'definition': ~
                                                    'resolver': | 'number' ~
                                                )
                                            }
                                        )
                                        `exact`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'group' {
                                                `decimal separator offset`: (
                                                    'definition': ~
                                                    'resolver': | 'optional' (
                                                        'constraints': {
                                                        }
                                                        'resolver': | 'number' ~
                                                    )
                                                )
                                                `type`: (
                                                    'definition': ~
                                                    'resolver': | 'state group' (
                                                        'definition': ~
                                                        'states': {
                                                            `integer`: (
                                                                'constraints': {
                                                                }
                                                                'resolver': | 'nothing' ~
                                                            )
                                                            `natural`: (
                                                                'constraints': {
                                                                }
                                                                'resolver': | 'nothing' ~
                                                            )
                                                            `positive natural`: (
                                                                'constraints': {
                                                                }
                                                                'resolver': | 'nothing' ~
                                                            )
                                                        }
                                                    )
                                                )
                                            }
                                        )
                                    }
                                )
                            )
                        }
                    )
                    `Option Constraints`: (
                        'signature': ~
                        'type resolver': | 'dictionary' (
                            'benchmark': ~
                            'definition': ~
                            'resolver': | 'state group' (
                                'definition': ~
                                'states': {
                                    `assert is set`: (
                                        'constraints': {
                                        }
                                        'resolver': | 'component' (
                                            'arguments': * (
                                                'lookups': ~
                                                'values': ~
                                            )
                                            'constraints': {
                                            }
                                            'location': | 'internal' `Possible Value Selection`
                                            'signature': ~
                                        )
                                    )
                                    `state`: (
                                        'constraints': {
                                        }
                                        'resolver': | 'group' {
                                            `selected state group`: (
                                                'definition': ~
                                                'resolver': | 'reference' (
                                                    'definition': ~
                                                    'type': | 'derived' (
                                                        'value': (
                                                            'resulting node': ~
                                                            'start': | 'constraint' | 'component' (
                                                                'constraint': `state group`
                                                                'property': `selection`
                                                            )
                                                            'tail': (
                                                                'path': [ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                            `selection`: (
                                                'definition': ~
                                                'resolver': | 'component' (
                                                    'arguments': * (
                                                        'lookups': ~
                                                        'values': ~
                                                    )
                                                    'constraints': {
                                                        `state group`: (
                                                            'constraint': (
                                                                'selection': (
                                                                    'path': [ | 'group' `resulting node` | 'reference' (
                                                                        'definition': ~
                                                                    ) ]
                                                                    'resulting node': ~
                                                                )
                                                                'type': | 'state' (
                                                                    'selected state group': ~
                                                                    'state': `state group`
                                                                )
                                                            )
                                                            'start': | 'property' ~
                                                        )
                                                    }
                                                    'location': | 'internal' `Guaranteed Value Selection`
                                                    'signature': ~
                                                )
                                            )
                                            `state`: (
                                                'definition': ~
                                                'resolver': | 'reference' (
                                                    'definition': ~
                                                    'type': | 'selected' (
                                                        'constraints': {
                                                        }
                                                        'definition': ~
                                                        'lookup': (
                                                            'resulting dictionary': ~
                                                            'type': | 'dictionary' (
                                                                'selected dictionary': ~
                                                                'selection': (
                                                                    'resulting node': ~
                                                                    'start': | 'sibling' `selected state group`
                                                                    'tail': (
                                                                        'path': [ | 'reference' (
                                                                            'definition': ~
                                                                        ) ]
                                                                        'resulting node': ~
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        }
                                    )
                                }
                            )
                        )
                    )
                    `Optional Value Initialization`: (
                        'signature': ~
                        'type resolver': | 'state group' (
                            'definition': ~
                            'states': {
                                `not set`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'nothing' ~
                                )
                                `selection`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'component' (
                                        'arguments': * (
                                            'lookups': ~
                                            'values': ~
                                        )
                                        'constraints': {
                                        }
                                        'location': | 'internal' `Possible Value Selection`
                                        'signature': ~
                                    )
                                )
                                `set`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'component' (
                                        'arguments': * (
                                            'lookups': ~
                                            'values': ~
                                        )
                                        'constraints': {
                                        }
                                        'location': | 'internal' `Guaranteed Value Selection`
                                        'signature': ~
                                    )
                                )
                            }
                        )
                    )
                    `Possible Value Selection`: (
                        'signature': ~
                        'type resolver': | 'state group' (
                            'definition': ~
                            'states': {
                                `parameter`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'reference' (
                                        'definition': ~
                                        'type': | 'selected' (
                                            'constraints': {
                                            }
                                            'definition': ~
                                            'lookup': (
                                                'resulting dictionary': ~
                                                'type': | 'dictionary' (
                                                    'selected dictionary': ~
                                                    'selection': (
                                                        'resulting node': ~
                                                        'start': | 'parameter' `signature`
                                                        'tail': (
                                                            'path': [ | 'group' `resolved parameters` | 'reference' (
                                                                'definition': ~
                                                            ) | 'group' `values` ]
                                                            'resulting node': ~
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                                `result`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'state group' (
                                        'definition': ~
                                        'states': {
                                            `optional value`: (
                                                'constraints': {
                                                }
                                                'resolver': | 'group' {
                                                    `optional value`: (
                                                        'definition': ~
                                                        'resolver': | 'reference' (
                                                            'definition': ~
                                                            'type': | 'derived' (
                                                                'value': (
                                                                    'resulting node': ~
                                                                    'start': | 'constraint' | 'reference' (
                                                                        'constraint': `optional`
                                                                        'property': `property`
                                                                    )
                                                                    'tail': (
                                                                        'path': [ ]
                                                                        'resulting node': ~
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                    `property`: (
                                                        'definition': ~
                                                        'resolver': | 'reference' (
                                                            'definition': ~
                                                            'type': | 'selected' (
                                                                'constraints': {
                                                                    `optional`: (
                                                                        'constraint': (
                                                                            'selection': (
                                                                                'path': [ | 'group' `resolver` | 'component' ~ ]
                                                                                'resulting node': ~
                                                                            )
                                                                            'type': | 'state' (
                                                                                'selected state group': ~
                                                                                'state': `optional`
                                                                            )
                                                                        )
                                                                        'start': | 'property' ~
                                                                    )
                                                                }
                                                                'definition': ~
                                                                'lookup': (
                                                                    'resulting dictionary': ~
                                                                    'type': | 'parameter' `sibling property resolvers`
                                                                )
                                                            )
                                                        )
                                                    )
                                                    `result`: (
                                                        'definition': ~
                                                        'resolver': | 'component' (
                                                            'arguments': * (
                                                                'lookups': * {
                                                                    `types`: | 'selection' (
                                                                        'resulting dictionary': ~
                                                                        'type': | 'dictionary' (
                                                                            'selected dictionary': ~
                                                                            'selection': (
                                                                                'resulting node': ~
                                                                                'start': | 'parameter' `types`
                                                                                'tail': (
                                                                                    'path': [ ]
                                                                                    'resulting node': ~
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                }
                                                                'values': * {
                                                                    `imports`: | 'parameter' `imports`
                                                                }
                                                            )
                                                            'constraints': {
                                                            }
                                                            'location': | 'internal' `Type Reference`
                                                            'signature': ~
                                                        )
                                                    )
                                                }
                                            )
                                            `state group`: (
                                                'constraints': {
                                                }
                                                'resolver': | 'group' {
                                                    `property`: (
                                                        'definition': ~
                                                        'resolver': | 'reference' (
                                                            'definition': ~
                                                            'type': | 'selected' (
                                                                'constraints': {
                                                                    `state group`: (
                                                                        'constraint': (
                                                                            'selection': (
                                                                                'path': [ | 'group' `resolver` | 'component' ~ ]
                                                                                'resulting node': ~
                                                                            )
                                                                            'type': | 'state' (
                                                                                'selected state group': ~
                                                                                'state': `state group`
                                                                            )
                                                                        )
                                                                        'start': | 'property' ~
                                                                    )
                                                                }
                                                                'definition': ~
                                                                'lookup': (
                                                                    'resulting dictionary': ~
                                                                    'type': | 'parameter' `sibling property resolvers`
                                                                )
                                                            )
                                                        )
                                                    )
                                                    `result`: (
                                                        'definition': ~
                                                        'resolver': | 'component' (
                                                            'arguments': * (
                                                                'lookups': * {
                                                                    `types`: | 'selection' (
                                                                        'resulting dictionary': ~
                                                                        'type': | 'dictionary' (
                                                                            'selected dictionary': ~
                                                                            'selection': (
                                                                                'resulting node': ~
                                                                                'start': | 'parameter' `types`
                                                                                'tail': (
                                                                                    'path': [ ]
                                                                                    'resulting node': ~
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                }
                                                                'values': * {
                                                                    `imports`: | 'parameter' `imports`
                                                                }
                                                            )
                                                            'constraints': {
                                                            }
                                                            'location': | 'internal' `Type Reference`
                                                            'signature': ~
                                                        )
                                                    )
                                                    `state group`: (
                                                        'definition': ~
                                                        'resolver': | 'reference' (
                                                            'definition': ~
                                                            'type': | 'derived' (
                                                                'value': (
                                                                    'resulting node': ~
                                                                    'start': | 'constraint' | 'reference' (
                                                                        'constraint': `state group`
                                                                        'property': `property`
                                                                    )
                                                                    'tail': (
                                                                        'path': [ ]
                                                                        'resulting node': ~
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                }
                                            )
                                        }
                                    )
                                )
                            }
                        )
                    )
                    `Presence`: (
                        'signature': ~
                        'type resolver': | 'state group' (
                            'definition': ~
                            'states': {
                                `optional`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'nothing' ~
                                )
                                `required`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'nothing' ~
                                )
                            }
                        )
                    )
                    `Property Constraint`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `constraint`: (
                                'definition': ~
                                'resolver': | 'component' (
                                    'arguments': * (
                                        'lookups': * {
                                        }
                                        'values': * {
                                            `node`: | 'required' (
                                                'resulting node': ~
                                                'start': | 'result' | 'state group' (
                                                    'property': `start`
                                                    'result': (
                                                        'location': | 'internal' `Type Node`
                                                        'resulting node': ~
                                                    )
                                                    'state group': ~
                                                )
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                        }
                                    )
                                    'constraints': {
                                    }
                                    'location': | 'internal' `Constraint`
                                    'signature': ~
                                )
                            )
                            `start`: (
                                'definition': ~
                                'resolver': | 'state group' (
                                    'definition': ~
                                    'states': {
                                        `property`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'nothing' ~
                                        )
                                        `sibling`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'component' (
                                                'arguments': * (
                                                    'lookups': * {
                                                        `property constraints`: | 'selection' (
                                                            'resulting dictionary': ~
                                                            'type': | 'parameter' `property constraints`
                                                        )
                                                    }
                                                    'values': * {
                                                    }
                                                )
                                                'constraints': {
                                                }
                                                'location': | 'internal' `Reference To Property Constraint`
                                                'signature': ~
                                            )
                                        )
                                    }
                                )
                            )
                        }
                    )
                    `Property Constraints`: (
                        'signature': ~
                        'type resolver': | 'dictionary' (
                            'benchmark': ~
                            'definition': ~
                            'resolver': | 'component' (
                                'arguments': * (
                                    'lookups': * {
                                        `property constraints`: | 'selection' (
                                            'resulting dictionary': ~
                                            'type': | 'not circular dependent siblings' ~
                                        )
                                    }
                                    'values': * {
                                    }
                                )
                                'constraints': {
                                }
                                'location': | 'internal' `Property Constraint`
                                'signature': ~
                            )
                        )
                    )
                    `Reference To Property Constraint`: (
                        'signature': ~
                        'type resolver': | 'reference' (
                            'definition': ~
                            'type': | 'selected' (
                                'constraints': {
                                }
                                'definition': ~
                                'lookup': (
                                    'resulting dictionary': ~
                                    'type': | 'parameter' `property constraints`
                                )
                            )
                        )
                    )
                    `Relative Value Selection`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `path`: (
                                'definition': ~
                                'resolver': | 'list' (
                                    'definition': ~
                                    'resolver': | 'state group' (
                                        'definition': ~
                                        'states': {
                                            `component`: (
                                                'constraints': {
                                                    `definition`: | 'state' (
                                                        'selected state group': ~
                                                        'selection': (
                                                            'resulting node': ~
                                                            'start': | 'list cursor' ~
                                                            'tail': (
                                                                'path': [ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        'state': `component`
                                                    )
                                                }
                                                'resolver': | 'nothing' ~
                                            )
                                            `group`: (
                                                'constraints': {
                                                    `definition`: | 'state' (
                                                        'selected state group': ~
                                                        'selection': (
                                                            'resulting node': ~
                                                            'start': | 'list cursor' ~
                                                            'tail': (
                                                                'path': [ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        'state': `group`
                                                    )
                                                }
                                                'resolver': | 'reference' (
                                                    'definition': ~
                                                    'type': | 'selected' (
                                                        'constraints': {
                                                        }
                                                        'definition': ~
                                                        'lookup': (
                                                            'resulting dictionary': ~
                                                            'type': | 'dictionary' (
                                                                'selected dictionary': ~
                                                                'selection': (
                                                                    'resulting node': ~
                                                                    'start': | 'option constraint' `definition`
                                                                    'tail': (
                                                                        'path': [ | 'component' ~ ]
                                                                        'resulting node': ~
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                            `reference`: (
                                                'constraints': {
                                                    `definition`: | 'state' (
                                                        'selected state group': ~
                                                        'selection': (
                                                            'resulting node': ~
                                                            'start': | 'list cursor' ~
                                                            'tail': (
                                                                'path': [ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        'state': `reference`
                                                    )
                                                }
                                                'resolver': | 'group' {
                                                    `definition`: (
                                                        'definition': ~
                                                        'resolver': | 'reference' (
                                                            'definition': ~
                                                            'type': | 'derived' (
                                                                'value': (
                                                                    'resulting node': ~
                                                                    'start': | 'option constraint' `definition`
                                                                    'tail': (
                                                                        'path': [ ]
                                                                        'resulting node': ~
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                }
                                            )
                                        }
                                    )
                                    'result': * (
                                        'location': | 'internal' `Type Node`
                                        'resulting node': ~
                                    )
                                )
                            )
                            `resulting node`: (
                                'definition': ~
                                'resolver': | 'reference' (
                                    'definition': ~
                                    'type': | 'derived' (
                                        'value': (
                                            'resulting node': ~
                                            'start': | 'result' | 'list' (
                                                'list result': ~
                                                'property': `path`
                                            )
                                            'tail': (
                                                'path': [ ]
                                                'resulting node': ~
                                            )
                                        )
                                    )
                                )
                            )
                        }
                    )
                    `Resolve Logic`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `resolvers`: (
                                'definition': ~
                                'resolver': | 'component' (
                                    'arguments': * (
                                        'lookups': * {
                                        }
                                        'values': * {
                                            `imports`: | 'parameter' `imports`
                                            `signatures`: | 'required' (
                                                'resulting node': ~
                                                'start': | 'sibling' `signatures`
                                                'tail': (
                                                    'path': [ | 'group' `types` ]
                                                    'resulting node': ~
                                                )
                                            )
                                            `types`: | 'parameter' `types`
                                        }
                                    )
                                    'constraints': {
                                    }
                                    'location': | 'internal' `Resolvers`
                                    'signature': ~
                                )
                            )
                            `signatures`: (
                                'definition': ~
                                'resolver': | 'group' {
                                    `types`: (
                                        'definition': ~
                                        'resolver': | 'component' (
                                            'arguments': * (
                                                'lookups': * {
                                                }
                                                'values': * {
                                                    `imports`: | 'parameter' `imports`
                                                    `types`: | 'parameter' `types`
                                                }
                                            )
                                            'constraints': {
                                            }
                                            'location': | 'internal' `Signatures`
                                            'signature': ~
                                        )
                                    )
                                }
                            )
                        }
                    )
                    `Resolvers`: (
                        'signature': ~
                        'type resolver': | 'dictionary' (
                            'benchmark': * (
                                'dense': `true`
                                'resulting dictionary': ~
                                'selection': (
                                    'resulting node': ~
                                    'start': | 'parameter' `signatures`
                                    'tail': (
                                        'path': [ ]
                                        'resulting node': ~
                                    )
                                )
                            )
                            'definition': ~
                            'resolver': | 'group' {
                                `signature`: (
                                    'definition': ~
                                    'resolver': | 'reference' (
                                        'definition': ~
                                        'type': | 'derived' (
                                            'value': (
                                                'resulting node': ~
                                                'start': | 'linked entry' ~
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                        )
                                    )
                                )
                                `type resolver`: (
                                    'definition': ~
                                    'resolver': | 'component' (
                                        'arguments': * (
                                            'lookups': * {
                                                `parent sibling property resolvers`: | 'not set' ~
                                                `sibling property resolvers`: | 'not set' ~
                                            }
                                            'values': * {
                                                `current dictionary`: | 'optional' | 'not set' ~
                                                `current ordered dictionary`: | 'optional' | 'not set' ~
                                                `definition`: | 'required' (
                                                    'resulting node': ~
                                                    'start': | 'linked entry' ~
                                                    'tail': (
                                                        'path': [ | 'component' ~ | 'group' `type` | 'reference' (
                                                            'definition': ~
                                                        ) | 'group' `node` ]
                                                        'resulting node': ~
                                                    )
                                                )
                                                `imports`: | 'optional' | 'set' (
                                                    'resulting node': ~
                                                    'start': | 'parameter' `imports`
                                                    'tail': (
                                                        'path': [ ]
                                                        'resulting node': ~
                                                    )
                                                )
                                                `linked entry`: | 'optional' | 'not set' ~
                                                `list cursor`: | 'optional' | 'not set' ~
                                                `option constraints`: | 'optional' | 'not set' ~
                                                `signature`: | 'required' (
                                                    'resulting node': ~
                                                    'start': | 'sibling' `signature`
                                                    'tail': (
                                                        'path': [ | 'reference' (
                                                            'definition': ~
                                                        ) ]
                                                        'resulting node': ~
                                                    )
                                                )
                                                `signatures`: | 'parameter' `signatures`
                                                `types`: | 'parameter' `types`
                                            }
                                        )
                                        'constraints': {
                                        }
                                        'location': | 'internal' `Node Resolver`
                                        'signature': ~
                                    )
                                )
                            }
                        )
                    )
                    `Schema`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `complexity`: (
                                'definition': ~
                                'resolver': | 'state group' (
                                    'definition': ~
                                    'states': {
                                        `constrained`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'component' (
                                                'arguments': * (
                                                    'lookups': * {
                                                    }
                                                    'values': * {
                                                        `imports`: | 'required' (
                                                            'resulting node': ~
                                                            'start': | 'sibling' `imports`
                                                            'tail': (
                                                                'path': [ | 'component' ~ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        `types`: | 'required' (
                                                            'resulting node': ~
                                                            'start': | 'sibling' `types`
                                                            'tail': (
                                                                'path': [ | 'component' ~ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                    }
                                                )
                                                'constraints': {
                                                }
                                                'location': | 'internal' `Resolve Logic`
                                                'signature': ~
                                            )
                                        )
                                        `unconstrained`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'nothing' ~
                                        )
                                    }
                                )
                            )
                            `globals`: (
                                'definition': ~
                                'resolver': | 'component' (
                                    'arguments': * (
                                        'lookups': * {
                                        }
                                        'values': * {
                                        }
                                    )
                                    'constraints': {
                                    }
                                    'location': | 'internal' `Globals`
                                    'signature': ~
                                )
                            )
                            `imports`: (
                                'definition': ~
                                'resolver': | 'component' (
                                    'arguments': * (
                                        'lookups': * {
                                            `sibling schemas`: | 'selection' (
                                                'resulting dictionary': ~
                                                'type': | 'parameter' `sibling schemas`
                                            )
                                        }
                                        'values': * {
                                        }
                                    )
                                    'constraints': {
                                    }
                                    'location': | 'internal' `Imports`
                                    'signature': ~
                                )
                            )
                            `types`: (
                                'definition': ~
                                'resolver': | 'component' (
                                    'arguments': * (
                                        'lookups': * {
                                        }
                                        'values': * {
                                            `globals`: | 'optional' | 'set' (
                                                'resulting node': ~
                                                'start': | 'sibling' `globals`
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                            `imports`: | 'optional' | 'set' (
                                                'resulting node': ~
                                                'start': | 'sibling' `imports`
                                                'tail': (
                                                    'path': [ | 'component' ~ ]
                                                    'resulting node': ~
                                                )
                                            )
                                        }
                                    )
                                    'constraints': {
                                    }
                                    'location': | 'internal' `Types`
                                    'signature': ~
                                )
                            )
                        }
                    )
                    `Schema Tree`: (
                        'signature': ~
                        'type resolver': | 'state group' (
                            'definition': ~
                            'states': {
                                `schema`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'component' (
                                        'arguments': * (
                                            'lookups': * {
                                                `sibling schemas`: | 'selection' (
                                                    'resulting dictionary': ~
                                                    'type': | 'parameter' `sibling schemas`
                                                )
                                            }
                                            'values': * {
                                            }
                                        )
                                        'constraints': {
                                        }
                                        'location': | 'internal' `Schema`
                                        'signature': ~
                                    )
                                )
                                `set`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'component' (
                                        'arguments': * (
                                            'lookups': * {
                                                `sibling schemas`: | 'selection' (
                                                    'resulting dictionary': ~
                                                    'type': | 'parameter' `sibling schemas`
                                                )
                                            }
                                            'values': * {
                                            }
                                        )
                                        'constraints': {
                                        }
                                        'location': | 'internal' `Schemas`
                                        'signature': ~
                                    )
                                )
                            }
                        )
                    )
                    `Schemas`: (
                        'signature': ~
                        'type resolver': | 'dictionary' (
                            'benchmark': ~
                            'definition': ~
                            'resolver': | 'component' (
                                'arguments': * (
                                    'lookups': * {
                                        `sibling schemas`: | 'stack' (
                                            'element': (
                                                'resulting dictionary': ~
                                                'type': | 'not circular dependent siblings' ~
                                            )
                                            'stack': (
                                                'resulting dictionary': ~
                                                'type': | 'parameter' `sibling schemas`
                                            )
                                        )
                                    }
                                    'values': * {
                                    }
                                )
                                'constraints': {
                                }
                                'location': | 'internal' `Schema Tree`
                                'signature': ~
                            )
                        )
                    )
                    `Signature`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `parameters`: (
                                'definition': ~
                                'resolver': | 'state group' (
                                    'definition': ~
                                    'states': {
                                        `local`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'component' (
                                                'arguments': * (
                                                    'lookups': * {
                                                    }
                                                    'values': * {
                                                        `imports`: | 'parameter' `imports`
                                                        `types`: | 'parameter' `types`
                                                    }
                                                )
                                                'constraints': {
                                                }
                                                'location': | 'internal' `Signature Parameters`
                                                'signature': ~
                                            )
                                        )
                                        `same as`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'reference' (
                                                'definition': ~
                                                'type': | 'selected' (
                                                    'constraints': {
                                                    }
                                                    'definition': ~
                                                    'lookup': (
                                                        'resulting dictionary': ~
                                                        'type': | 'parameter' `sibling signatures`
                                                    )
                                                )
                                            )
                                        )
                                    }
                                )
                            )
                            `resolved parameters`: (
                                'definition': ~
                                'resolver': | 'reference' (
                                    'definition': ~
                                    'type': | 'derived' (
                                        'value': (
                                            'resulting node': ~
                                            'start': | 'result' | 'state group' (
                                                'property': `parameters`
                                                'result': (
                                                    'location': | 'internal' `Signature Parameters`
                                                    'resulting node': ~
                                                )
                                                'state group': ~
                                            )
                                            'tail': (
                                                'path': [ ]
                                                'resulting node': ~
                                            )
                                        )
                                    )
                                )
                            )
                            `type`: (
                                'definition': ~
                                'resolver': | 'reference' (
                                    'definition': ~
                                    'type': | 'derived' (
                                        'value': (
                                            'resulting node': ~
                                            'start': | 'parameter' `type`
                                            'tail': (
                                                'path': [ ]
                                                'resulting node': ~
                                            )
                                        )
                                    )
                                )
                            )
                        }
                    )
                    `Signature Parameters`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `lookups`: (
                                'definition': ~
                                'resolver': | 'dictionary' (
                                    'benchmark': ~
                                    'definition': ~
                                    'resolver': | 'group' {
                                        `dictionary`: (
                                            'definition': ~
                                            'resolver': | 'reference' (
                                                'definition': ~
                                                'type': | 'derived' (
                                                    'value': (
                                                        'resulting node': ~
                                                        'start': | 'constraint' | 'component' (
                                                            'constraint': `dictionary`
                                                            'property': `referent`
                                                        )
                                                        'tail': (
                                                            'path': [ ]
                                                            'resulting node': ~
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        `presence`: (
                                            'definition': ~
                                            'resolver': | 'component' (
                                                'arguments': * (
                                                    'lookups': * {
                                                    }
                                                    'values': * {
                                                    }
                                                )
                                                'constraints': {
                                                }
                                                'location': | 'internal' `Presence`
                                                'signature': ~
                                            )
                                        )
                                        `referent`: (
                                            'definition': ~
                                            'resolver': | 'component' (
                                                'arguments': * (
                                                    'lookups': * {
                                                        `types`: | 'selection' (
                                                            'resulting dictionary': ~
                                                            'type': | 'dictionary' (
                                                                'selected dictionary': ~
                                                                'selection': (
                                                                    'resulting node': ~
                                                                    'start': | 'parameter' `types`
                                                                    'tail': (
                                                                        'path': [ ]
                                                                        'resulting node': ~
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    }
                                                    'values': * {
                                                        `imports`: | 'optional' | 'set' (
                                                            'resulting node': ~
                                                            'start': | 'parameter' `imports`
                                                            'tail': (
                                                                'path': [ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                    }
                                                )
                                                'constraints': {
                                                    `dictionary`: (
                                                        'constraint': (
                                                            'selection': (
                                                                'path': [ | 'group' `resulting node` | 'reference' (
                                                                    'definition': ~
                                                                ) ]
                                                                'resulting node': ~
                                                            )
                                                            'type': | 'state' (
                                                                'selected state group': ~
                                                                'state': `dictionary`
                                                            )
                                                        )
                                                        'start': | 'property' ~
                                                    )
                                                }
                                                'location': | 'internal' `Type Reference`
                                                'signature': ~
                                            )
                                        )
                                        `type`: (
                                            'definition': ~
                                            'resolver': | 'state group' (
                                                'definition': ~
                                                'states': {
                                                    `acyclic`: (
                                                        'constraints': {
                                                        }
                                                        'resolver': | 'nothing' ~
                                                    )
                                                    `cyclic`: (
                                                        'constraints': {
                                                        }
                                                        'resolver': | 'nothing' ~
                                                    )
                                                    `stack`: (
                                                        'constraints': {
                                                        }
                                                        'resolver': | 'nothing' ~
                                                    )
                                                }
                                            )
                                        )
                                    }
                                )
                            )
                            `values`: (
                                'definition': ~
                                'resolver': | 'dictionary' (
                                    'benchmark': ~
                                    'definition': ~
                                    'resolver': | 'group' {
                                        `data type`: (
                                            'definition': ~
                                            'resolver': | 'component' (
                                                'arguments': * (
                                                    'lookups': * {
                                                        `types`: | 'selection' (
                                                            'resulting dictionary': ~
                                                            'type': | 'dictionary' (
                                                                'selected dictionary': ~
                                                                'selection': (
                                                                    'resulting node': ~
                                                                    'start': | 'parameter' `types`
                                                                    'tail': (
                                                                        'path': [ ]
                                                                        'resulting node': ~
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    }
                                                    'values': * {
                                                        `imports`: | 'optional' | 'set' (
                                                            'resulting node': ~
                                                            'start': | 'parameter' `imports`
                                                            'tail': (
                                                                'path': [ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                    }
                                                )
                                                'constraints': {
                                                }
                                                'location': | 'internal' `Type Reference`
                                                'signature': ~
                                            )
                                        )
                                        `presence`: (
                                            'definition': ~
                                            'resolver': | 'component' (
                                                'arguments': * (
                                                    'lookups': * {
                                                    }
                                                    'values': * {
                                                    }
                                                )
                                                'constraints': {
                                                }
                                                'location': | 'internal' `Presence`
                                                'signature': ~
                                            )
                                        )
                                    }
                                )
                            )
                        }
                    )
                    `Signatures`: (
                        'signature': ~
                        'type resolver': | 'dictionary' (
                            'benchmark': * (
                                'dense': `true`
                                'resulting dictionary': ~
                                'selection': (
                                    'resulting node': ~
                                    'start': | 'parameter' `types`
                                    'tail': (
                                        'path': [ ]
                                        'resulting node': ~
                                    )
                                )
                            )
                            'definition': ~
                            'resolver': | 'component' (
                                'arguments': * (
                                    'lookups': * {
                                        `sibling signatures`: | 'selection' (
                                            'resulting dictionary': ~
                                            'type': | 'not circular dependent siblings' ~
                                        )
                                    }
                                    'values': * {
                                        `imports`: | 'parameter' `imports`
                                        `type`: | 'required' (
                                            'resulting node': ~
                                            'start': | 'linked entry' ~
                                            'tail': (
                                                'path': [ | 'component' ~ ]
                                                'resulting node': ~
                                            )
                                        )
                                        `types`: | 'parameter' `types`
                                    }
                                )
                                'constraints': {
                                }
                                'location': | 'internal' `Signature`
                                'signature': ~
                            )
                        )
                    )
                    `Text Type`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `type`: (
                                'definition': ~
                                'resolver': | 'state group' (
                                    'definition': ~
                                    'states': {
                                        `multi line`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'nothing' ~
                                        )
                                        `single line`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'nothing' ~
                                        )
                                    }
                                )
                            )
                        }
                    )
                    `Type`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `node`: (
                                'definition': ~
                                'resolver': | 'component' (
                                    'arguments': * (
                                        'lookups': * {
                                            `noncircular sibling types`: | 'selection' (
                                                'resulting dictionary': ~
                                                'type': | 'parameter' `noncircular sibling types`
                                            )
                                            `possibly circular dependent sibling types`: | 'selection' (
                                                'resulting dictionary': ~
                                                'type': | 'parameter' `possibly circular dependent sibling types`
                                            )
                                        }
                                        'values': * {
                                            `globals`: | 'parameter' `globals`
                                            `imports`: | 'parameter' `imports`
                                            `type parameters`: | 'required' (
                                                'resulting node': ~
                                                'start': | 'sibling' `type parameters`
                                                'tail': (
                                                    'path': [ ]
                                                    'resulting node': ~
                                                )
                                            )
                                        }
                                    )
                                    'constraints': {
                                    }
                                    'location': | 'internal' `Type Node`
                                    'signature': ~
                                )
                            )
                            `type parameters`: (
                                'definition': ~
                                'resolver': | 'component' (
                                    'arguments': * (
                                        'lookups': * {
                                        }
                                        'values': * {
                                        }
                                    )
                                    'constraints': {
                                    }
                                    'location': | 'internal' `Type Parameters`
                                    'signature': ~
                                )
                            )
                        }
                    )
                    `Type Node`: (
                        'signature': ~
                        'type resolver': | 'state group' (
                            'definition': ~
                            'states': {
                                `boolean`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'nothing' ~
                                )
                                `component`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'state group' (
                                        'definition': ~
                                        'states': {
                                            `external`: (
                                                'constraints': {
                                                    `import`: | 'assert is set' | 'parameter' `imports`
                                                }
                                                'resolver': | 'group' {
                                                    `import`: (
                                                        'definition': ~
                                                        'resolver': | 'reference' (
                                                            'definition': ~
                                                            'type': | 'selected' (
                                                                'constraints': {
                                                                }
                                                                'definition': ~
                                                                'lookup': (
                                                                    'resulting dictionary': ~
                                                                    'type': | 'dictionary' (
                                                                        'selected dictionary': ~
                                                                        'selection': (
                                                                            'resulting node': ~
                                                                            'start': | 'option constraint' `import`
                                                                            'tail': (
                                                                                'path': [ ]
                                                                                'resulting node': ~
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                    `type`: (
                                                        'definition': ~
                                                        'resolver': | 'reference' (
                                                            'definition': ~
                                                            'type': | 'selected' (
                                                                'constraints': {
                                                                }
                                                                'definition': ~
                                                                'lookup': (
                                                                    'resulting dictionary': ~
                                                                    'type': | 'dictionary' (
                                                                        'selected dictionary': ~
                                                                        'selection': (
                                                                            'resulting node': ~
                                                                            'start': | 'sibling' `import`
                                                                            'tail': (
                                                                                'path': [ | 'reference' (
                                                                                    'definition': ~
                                                                                ) | 'group' `schema` | 'reference' (
                                                                                    'definition': ~
                                                                                ) | 'group' `types` | 'component' ~ ]
                                                                                'resulting node': ~
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                }
                                            )
                                            `internal`: (
                                                'constraints': {
                                                }
                                                'resolver': | 'reference' (
                                                    'definition': ~
                                                    'type': | 'selected' (
                                                        'constraints': {
                                                        }
                                                        'definition': ~
                                                        'lookup': (
                                                            'resulting dictionary': ~
                                                            'type': | 'parameter' `noncircular sibling types`
                                                        )
                                                    )
                                                )
                                            )
                                            `internal cyclic`: (
                                                'constraints': {
                                                }
                                                'resolver': | 'reference' (
                                                    'definition': ~
                                                    'type': | 'selected' (
                                                        'constraints': {
                                                        }
                                                        'definition': ~
                                                        'lookup': (
                                                            'resulting dictionary': ~
                                                            'type': | 'parameter' `possibly circular dependent sibling types`
                                                        )
                                                    )
                                                )
                                            )
                                        }
                                    )
                                )
                                `dictionary`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'component' (
                                        'arguments': * (
                                            'lookups': * {
                                                `noncircular sibling types`: | 'selection' (
                                                    'resulting dictionary': ~
                                                    'type': | 'parameter' `noncircular sibling types`
                                                )
                                                `possibly circular dependent sibling types`: | 'selection' (
                                                    'resulting dictionary': ~
                                                    'type': | 'parameter' `possibly circular dependent sibling types`
                                                )
                                            }
                                            'values': * {
                                                `globals`: | 'parameter' `globals`
                                                `imports`: | 'parameter' `imports`
                                                `type parameters`: | 'parameter' `type parameters`
                                            }
                                        )
                                        'constraints': {
                                        }
                                        'location': | 'internal' `Dictionary`
                                        'signature': ~
                                    )
                                )
                                `group`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'component' (
                                        'arguments': * (
                                            'lookups': * {
                                                `noncircular sibling types`: | 'selection' (
                                                    'resulting dictionary': ~
                                                    'type': | 'parameter' `noncircular sibling types`
                                                )
                                                `possibly circular dependent sibling types`: | 'selection' (
                                                    'resulting dictionary': ~
                                                    'type': | 'parameter' `possibly circular dependent sibling types`
                                                )
                                            }
                                            'values': * {
                                                `globals`: | 'parameter' `globals`
                                                `imports`: | 'parameter' `imports`
                                                `type parameters`: | 'parameter' `type parameters`
                                            }
                                        )
                                        'constraints': {
                                        }
                                        'location': | 'internal' `Group`
                                        'signature': ~
                                    )
                                )
                                `identifier value pair`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'component' (
                                        'arguments': * (
                                            'lookups': ~
                                            'values': ~
                                        )
                                        'constraints': {
                                        }
                                        'location': | 'internal' `Type Node`
                                        'signature': ~
                                    )
                                )
                                `list`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'group' {
                                        `node`: (
                                            'definition': ~
                                            'resolver': | 'component' (
                                                'arguments': * (
                                                    'lookups': ~
                                                    'values': ~
                                                )
                                                'constraints': {
                                                }
                                                'location': | 'internal' `Type Node`
                                                'signature': ~
                                            )
                                        )
                                    }
                                )
                                `nothing`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'nothing' ~
                                )
                                `number`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'state group' (
                                        'definition': ~
                                        'states': {
                                            `global`: (
                                                'constraints': {
                                                    `globals`: | 'assert is set' | 'parameter' `globals`
                                                }
                                                'resolver': | 'reference' (
                                                    'definition': ~
                                                    'type': | 'selected' (
                                                        'constraints': {
                                                        }
                                                        'definition': ~
                                                        'lookup': (
                                                            'resulting dictionary': ~
                                                            'type': | 'dictionary' (
                                                                'selected dictionary': ~
                                                                'selection': (
                                                                    'resulting node': ~
                                                                    'start': | 'option constraint' `globals`
                                                                    'tail': (
                                                                        'path': [ | 'group' `number types` ]
                                                                        'resulting node': ~
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                            `local`: (
                                                'constraints': {
                                                }
                                                'resolver': | 'component' (
                                                    'arguments': * (
                                                        'lookups': * {
                                                        }
                                                        'values': * {
                                                        }
                                                    )
                                                    'constraints': {
                                                    }
                                                    'location': | 'internal' `Number Type`
                                                    'signature': ~
                                                )
                                            )
                                        }
                                    )
                                )
                                `optional`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'component' (
                                        'arguments': * (
                                            'lookups': ~
                                            'values': ~
                                        )
                                        'constraints': {
                                        }
                                        'location': | 'internal' `Type Node`
                                        'signature': ~
                                    )
                                )
                                `reference`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'group' {
                                        `referent`: (
                                            'definition': ~
                                            'resolver': | 'component' (
                                                'arguments': * (
                                                    'lookups': * {
                                                        `types`: | 'selection' (
                                                            'resulting dictionary': ~
                                                            'type': | 'parameter' `noncircular sibling types`
                                                        )
                                                    }
                                                    'values': * {
                                                        `imports`: | 'parameter' `imports`
                                                    }
                                                )
                                                'constraints': {
                                                }
                                                'location': | 'internal' `Type Node Reference`
                                                'signature': ~
                                            )
                                        )
                                        `type`: (
                                            'definition': ~
                                            'resolver': | 'state group' (
                                                'definition': ~
                                                'states': {
                                                    `derived`: (
                                                        'constraints': {
                                                        }
                                                        'resolver': | 'nothing' ~
                                                    )
                                                    `selected`: (
                                                        'constraints': {
                                                            `dictionary`: | 'state' (
                                                                'selected state group': ~
                                                                'selection': (
                                                                    'resulting node': ~
                                                                    'start': | 'sibling' `referent`
                                                                    'tail': (
                                                                        'path': [ | 'component' ~ | 'group' `resulting node` | 'reference' (
                                                                            'definition': ~
                                                                        ) ]
                                                                        'resulting node': ~
                                                                    )
                                                                )
                                                                'state': `dictionary`
                                                            )
                                                        }
                                                        'resolver': | 'group' {
                                                            `dependency`: (
                                                                'definition': ~
                                                                'resolver': | 'state group' (
                                                                    'definition': ~
                                                                    'states': {
                                                                        `acyclic`: (
                                                                            'constraints': {
                                                                            }
                                                                            'resolver': | 'nothing' ~
                                                                        )
                                                                        `cyclic`: (
                                                                            'constraints': {
                                                                            }
                                                                            'resolver': | 'nothing' ~
                                                                        )
                                                                        `stack`: (
                                                                            'constraints': {
                                                                            }
                                                                            'resolver': | 'nothing' ~
                                                                        )
                                                                    }
                                                                )
                                                            )
                                                            `dictionary`: (
                                                                'definition': ~
                                                                'resolver': | 'reference' (
                                                                    'definition': ~
                                                                    'type': | 'derived' (
                                                                        'value': (
                                                                            'resulting node': ~
                                                                            'start': | 'option constraint' `dictionary`
                                                                            'tail': (
                                                                                'path': [ ]
                                                                                'resulting node': ~
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        }
                                                    )
                                                }
                                            )
                                        )
                                    }
                                )
                                `state group`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'dictionary' (
                                        'benchmark': ~
                                        'definition': ~
                                        'resolver': | 'component' (
                                            'arguments': * (
                                                'lookups': ~
                                                'values': ~
                                            )
                                            'constraints': {
                                            }
                                            'location': | 'internal' `Type Node`
                                            'signature': ~
                                        )
                                    )
                                )
                                `text`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'state group' (
                                        'definition': ~
                                        'states': {
                                            `global`: (
                                                'constraints': {
                                                    `globals`: | 'assert is set' | 'parameter' `globals`
                                                }
                                                'resolver': | 'reference' (
                                                    'definition': ~
                                                    'type': | 'selected' (
                                                        'constraints': {
                                                        }
                                                        'definition': ~
                                                        'lookup': (
                                                            'resulting dictionary': ~
                                                            'type': | 'dictionary' (
                                                                'selected dictionary': ~
                                                                'selection': (
                                                                    'resulting node': ~
                                                                    'start': | 'option constraint' `globals`
                                                                    'tail': (
                                                                        'path': [ | 'group' `text types` ]
                                                                        'resulting node': ~
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                            `local`: (
                                                'constraints': {
                                                }
                                                'resolver': | 'component' (
                                                    'arguments': * (
                                                        'lookups': * {
                                                        }
                                                        'values': * {
                                                        }
                                                    )
                                                    'constraints': {
                                                    }
                                                    'location': | 'internal' `Text Type`
                                                    'signature': ~
                                                )
                                            )
                                        }
                                    )
                                )
                                `type parameter`: (
                                    'constraints': {
                                    }
                                    'resolver': | 'reference' (
                                        'definition': ~
                                        'type': | 'selected' (
                                            'constraints': {
                                            }
                                            'definition': ~
                                            'lookup': (
                                                'resulting dictionary': ~
                                                'type': | 'dictionary' (
                                                    'selected dictionary': ~
                                                    'selection': (
                                                        'resulting node': ~
                                                        'start': | 'parameter' `type parameters`
                                                        'tail': (
                                                            'path': [ ]
                                                            'resulting node': ~
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            }
                        )
                    )
                    `Type Node Reference`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `resulting node`: (
                                'definition': ~
                                'resolver': | 'reference' (
                                    'definition': ~
                                    'type': | 'derived' (
                                        'value': (
                                            'resulting node': ~
                                            'start': | 'result' | 'list' (
                                                'list result': ~
                                                'property': `tail`
                                            )
                                            'tail': (
                                                'path': [ ]
                                                'resulting node': ~
                                            )
                                        )
                                    )
                                )
                            )
                            `tail`: (
                                'definition': ~
                                'resolver': | 'list' (
                                    'definition': ~
                                    'resolver': | 'state group' (
                                        'definition': ~
                                        'states': {
                                            `dictionary`: (
                                                'constraints': {
                                                    `definition`: | 'state' (
                                                        'selected state group': ~
                                                        'selection': (
                                                            'resulting node': ~
                                                            'start': | 'list cursor' ~
                                                            'tail': (
                                                                'path': [ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        'state': `dictionary`
                                                    )
                                                }
                                                'resolver': | 'nothing' ~
                                            )
                                            `group`: (
                                                'constraints': {
                                                    `definition`: | 'state' (
                                                        'selected state group': ~
                                                        'selection': (
                                                            'resulting node': ~
                                                            'start': | 'list cursor' ~
                                                            'tail': (
                                                                'path': [ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        'state': `group`
                                                    )
                                                }
                                                'resolver': | 'reference' (
                                                    'definition': ~
                                                    'type': | 'selected' (
                                                        'constraints': {
                                                        }
                                                        'definition': ~
                                                        'lookup': (
                                                            'resulting dictionary': ~
                                                            'type': | 'dictionary' (
                                                                'selected dictionary': ~
                                                                'selection': (
                                                                    'resulting node': ~
                                                                    'start': | 'option constraint' `definition`
                                                                    'tail': (
                                                                        'path': [ | 'component' ~ ]
                                                                        'resulting node': ~
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                            `identifier value pair`: (
                                                'constraints': {
                                                    `definition`: | 'state' (
                                                        'selected state group': ~
                                                        'selection': (
                                                            'resulting node': ~
                                                            'start': | 'list cursor' ~
                                                            'tail': (
                                                                'path': [ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        'state': `identifier value pair`
                                                    )
                                                }
                                                'resolver': | 'nothing' ~
                                            )
                                            `list`: (
                                                'constraints': {
                                                    `definition`: | 'state' (
                                                        'selected state group': ~
                                                        'selection': (
                                                            'resulting node': ~
                                                            'start': | 'list cursor' ~
                                                            'tail': (
                                                                'path': [ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        'state': `list`
                                                    )
                                                }
                                                'resolver': | 'nothing' ~
                                            )
                                            `optional`: (
                                                'constraints': {
                                                    `definition`: | 'state' (
                                                        'selected state group': ~
                                                        'selection': (
                                                            'resulting node': ~
                                                            'start': | 'list cursor' ~
                                                            'tail': (
                                                                'path': [ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        'state': `optional`
                                                    )
                                                }
                                                'resolver': | 'nothing' ~
                                            )
                                            `state group`: (
                                                'constraints': {
                                                    `definition`: | 'state' (
                                                        'selected state group': ~
                                                        'selection': (
                                                            'resulting node': ~
                                                            'start': | 'list cursor' ~
                                                            'tail': (
                                                                'path': [ ]
                                                                'resulting node': ~
                                                            )
                                                        )
                                                        'state': `state group`
                                                    )
                                                }
                                                'resolver': | 'reference' (
                                                    'definition': ~
                                                    'type': | 'selected' (
                                                        'constraints': {
                                                        }
                                                        'definition': ~
                                                        'lookup': (
                                                            'resulting dictionary': ~
                                                            'type': | 'dictionary' (
                                                                'selected dictionary': ~
                                                                'selection': (
                                                                    'resulting node': ~
                                                                    'start': | 'option constraint' `definition`
                                                                    'tail': (
                                                                        'path': [ ]
                                                                        'resulting node': ~
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        }
                                    )
                                    'result': * (
                                        'location': | 'internal' `Type Node`
                                        'resulting node': ~
                                    )
                                )
                            )
                            `type location`: (
                                'definition': ~
                                'resolver': | 'component' (
                                    'arguments': * (
                                        'lookups': ~
                                        'values': ~
                                    )
                                    'constraints': {
                                    }
                                    'location': | 'internal' `Type Reference`
                                    'signature': ~
                                )
                            )
                        }
                    )
                    `Type Parameters`: (
                        'signature': ~
                        'type resolver': | 'dictionary' (
                            'benchmark': ~
                            'definition': ~
                            'resolver': | 'nothing' ~
                        )
                    )
                    `Type Reference`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `location`: (
                                'definition': ~
                                'resolver': | 'state group' (
                                    'definition': ~
                                    'states': {
                                        `external`: (
                                            'constraints': {
                                                `import`: | 'assert is set' | 'parameter' `imports`
                                            }
                                            'resolver': | 'group' {
                                                `import`: (
                                                    'definition': ~
                                                    'resolver': | 'reference' (
                                                        'definition': ~
                                                        'type': | 'selected' (
                                                            'constraints': {
                                                            }
                                                            'definition': ~
                                                            'lookup': (
                                                                'resulting dictionary': ~
                                                                'type': | 'dictionary' (
                                                                    'selected dictionary': ~
                                                                    'selection': (
                                                                        'resulting node': ~
                                                                        'start': | 'option constraint' `import`
                                                                        'tail': (
                                                                            'path': [ ]
                                                                            'resulting node': ~
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                                `type`: (
                                                    'definition': ~
                                                    'resolver': | 'reference' (
                                                        'definition': ~
                                                        'type': | 'selected' (
                                                            'constraints': {
                                                            }
                                                            'definition': ~
                                                            'lookup': (
                                                                'resulting dictionary': ~
                                                                'type': | 'dictionary' (
                                                                    'selected dictionary': ~
                                                                    'selection': (
                                                                        'resulting node': ~
                                                                        'start': | 'sibling' `import`
                                                                        'tail': (
                                                                            'path': [ | 'reference' (
                                                                                'definition': ~
                                                                            ) | 'group' `schema` | 'reference' (
                                                                                'definition': ~
                                                                            ) | 'group' `types` | 'component' ~ ]
                                                                            'resulting node': ~
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            }
                                        )
                                        `internal`: (
                                            'constraints': {
                                            }
                                            'resolver': | 'reference' (
                                                'definition': ~
                                                'type': | 'selected' (
                                                    'constraints': {
                                                    }
                                                    'definition': ~
                                                    'lookup': (
                                                        'resulting dictionary': ~
                                                        'type': | 'parameter' `types`
                                                    )
                                                )
                                            )
                                        )
                                    }
                                )
                            )
                            `resulting node`: (
                                'definition': ~
                                'resolver': | 'reference' (
                                    'definition': ~
                                    'type': | 'derived' (
                                        'value': (
                                            'resulting node': ~
                                            'start': | 'result' | 'state group' (
                                                'property': `location`
                                                'result': (
                                                    'location': | 'internal' `Type Node`
                                                    'resulting node': ~
                                                )
                                                'state group': ~
                                            )
                                            'tail': (
                                                'path': [ ]
                                                'resulting node': ~
                                            )
                                        )
                                    )
                                )
                            )
                        }
                    )
                    `Type Specification`: (
                        'signature': ~
                        'type resolver': | 'group' {
                            `schema`: (
                                'definition': ~
                                'resolver': | 'component' (
                                    'arguments': * (
                                        'lookups': * {
                                            `sibling schemas`: | 'empty stack' ~
                                        }
                                        'values': * {
                                        }
                                    )
                                    'constraints': {
                                    }
                                    'location': | 'internal' `Schema Tree`
                                    'signature': ~
                                )
                            )
                            `schema path`: (
                                'definition': ~
                                'resolver': | 'list' (
                                    'definition': ~
                                    'resolver': | 'text' ~
                                    'result': ~
                                )
                            )
                            `type`: (
                                'definition': ~
                                'resolver': | 'text' ~
                            )
                        }
                    )
                    `Types`: (
                        'signature': ~
                        'type resolver': | 'dictionary' (
                            'benchmark': ~
                            'definition': ~
                            'resolver': | 'component' (
                                'arguments': * (
                                    'lookups': * {
                                        `noncircular sibling types`: | 'selection' (
                                            'resulting dictionary': ~
                                            'type': | 'not circular dependent siblings' ~
                                        )
                                        `possibly circular dependent sibling types`: | 'selection' (
                                            'resulting dictionary': ~
                                            'type': | 'possibly circular dependent siblings' ~
                                        )
                                    }
                                    'values': * {
                                        `globals`: | 'parameter' `globals`
                                        `imports`: | 'parameter' `imports`
                                    }
                                )
                                'constraints': {
                                }
                                'location': | 'internal' `Type`
                                'signature': ~
                            )
                        )
                    )
                }
                'signatures': (
                    'types': {
                        `Benchmark`: (
                            'parameters': | 'same as' `Node Resolver`
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Constraint`: (
                            'parameters': | 'same as' `Relative Value Selection`
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Dictionary`: (
                            'parameters': | 'local' (
                                'lookups': {
                                    `noncircular sibling types`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                        'type': | 'acyclic' ~
                                    )
                                    `possibly circular dependent sibling types`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                        'type': | 'cyclic' ~
                                    )
                                }
                                'values': {
                                    `globals`: (
                                        'data type': (
                                            'location': | 'internal' `Globals`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `imports`: (
                                        'data type': (
                                            'location': | 'internal' `Imports`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `type parameters`: (
                                        'data type': (
                                            'location': | 'internal' `Type Parameters`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Globals`: (
                            'parameters': | 'local' (
                                'lookups': {
                                }
                                'values': {
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Group`: (
                            'parameters': | 'local' (
                                'lookups': {
                                    `noncircular sibling types`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                        'type': | 'acyclic' ~
                                    )
                                    `possibly circular dependent sibling types`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                        'type': | 'cyclic' ~
                                    )
                                }
                                'values': {
                                    `globals`: (
                                        'data type': (
                                            'location': | 'internal' `Globals`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `imports`: (
                                        'data type': (
                                            'location': | 'internal' `Imports`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `type parameters`: (
                                        'data type': (
                                            'location': | 'internal' `Type Parameters`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Guaranteed Value Selection`: (
                            'parameters': | 'same as' `Node Resolver`
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Imports`: (
                            'parameters': | 'same as' `Schemas`
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Lookup Selection`: (
                            'parameters': | 'same as' `Node Resolver`
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Node Resolver`: (
                            'parameters': | 'local' (
                                'lookups': {
                                    `parent sibling property resolvers`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Node Resolver Group`
                                            'resulting node': ~
                                        )
                                        'type': | 'acyclic' ~
                                    )
                                    `sibling property resolvers`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Node Resolver Group`
                                            'resulting node': ~
                                        )
                                        'type': | 'acyclic' ~
                                    )
                                }
                                'values': {
                                    `current dictionary`: (
                                        'data type': (
                                            'location': | 'internal' `Dictionary`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `current ordered dictionary`: (
                                        'data type': (
                                            'location': | 'internal' `Dictionary`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `definition`: (
                                        'data type': (
                                            'location': | 'internal' `Type Node`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                    `imports`: (
                                        'data type': (
                                            'location': | 'internal' `Imports`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `linked entry`: (
                                        'data type': (
                                            'location': | 'internal' `Benchmark`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `list cursor`: (
                                        'data type': (
                                            'location': | 'internal' `Node Resolver List Result`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `option constraints`: (
                                        'data type': (
                                            'location': | 'internal' `Option Constraints`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `signature`: (
                                        'data type': (
                                            'location': | 'internal' `Signature`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                    `signatures`: (
                                        'data type': (
                                            'location': | 'internal' `Signatures`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                    `types`: (
                                        'data type': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Node Resolver Group`: (
                            'parameters': | 'local' (
                                'lookups': {
                                    `parent sibling property resolvers`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Node Resolver Group`
                                            'resulting node': ~
                                        )
                                        'type': | 'acyclic' ~
                                    )
                                    `sibling property resolvers`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Node Resolver Group`
                                            'resulting node': ~
                                        )
                                        'type': | 'acyclic' ~
                                    )
                                }
                                'values': {
                                    `current dictionary`: (
                                        'data type': (
                                            'location': | 'internal' `Dictionary`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `current ordered dictionary`: (
                                        'data type': (
                                            'location': | 'internal' `Dictionary`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `definition`: (
                                        'data type': (
                                            'location': | 'internal' `Group`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                    `imports`: (
                                        'data type': (
                                            'location': | 'internal' `Imports`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `linked entry`: (
                                        'data type': (
                                            'location': | 'internal' `Benchmark`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `list cursor`: (
                                        'data type': (
                                            'location': | 'internal' `Node Resolver List Result`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `option constraints`: (
                                        'data type': (
                                            'location': | 'internal' `Option Constraints`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `signature`: (
                                        'data type': (
                                            'location': | 'internal' `Signature`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                    `signatures`: (
                                        'data type': (
                                            'location': | 'internal' `Signatures`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                    `types`: (
                                        'data type': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Node Resolver List Result`: (
                            'parameters': | 'same as' `Type Reference`
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Number Type`: (
                            'parameters': | 'local' (
                                'lookups': {
                                }
                                'values': {
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Option Constraints`: (
                            'parameters': | 'same as' `Node Resolver`
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Optional Value Initialization`: (
                            'parameters': | 'same as' `Node Resolver`
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Possible Value Selection`: (
                            'parameters': | 'same as' `Node Resolver`
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Presence`: (
                            'parameters': | 'local' (
                                'lookups': {
                                }
                                'values': {
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Property Constraint`: (
                            'parameters': | 'local' (
                                'lookups': {
                                    `property constraints`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Property Constraints`
                                            'resulting node': ~
                                        )
                                        'type': | 'acyclic' ~
                                    )
                                }
                                'values': {
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Property Constraints`: (
                            'parameters': | 'same as' `Relative Value Selection`
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Reference To Property Constraint`: (
                            'parameters': | 'local' (
                                'lookups': {
                                    `property constraints`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Property Constraints`
                                            'resulting node': ~
                                        )
                                        'type': | 'acyclic' ~
                                    )
                                }
                                'values': {
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Relative Value Selection`: (
                            'parameters': | 'local' (
                                'lookups': {
                                }
                                'values': {
                                    `node`: (
                                        'data type': (
                                            'location': | 'internal' `Type Node`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Resolve Logic`: (
                            'parameters': | 'local' (
                                'lookups': {
                                }
                                'values': {
                                    `imports`: (
                                        'data type': (
                                            'location': | 'internal' `Imports`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                    `types`: (
                                        'data type': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Resolvers`: (
                            'parameters': | 'local' (
                                'lookups': {
                                }
                                'values': {
                                    `imports`: (
                                        'data type': (
                                            'location': | 'internal' `Imports`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                    `signatures`: (
                                        'data type': (
                                            'location': | 'internal' `Signatures`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                    `types`: (
                                        'data type': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Schema`: (
                            'parameters': | 'same as' `Schemas`
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Schema Tree`: (
                            'parameters': | 'local' (
                                'lookups': {
                                    `sibling schemas`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Schemas`
                                            'resulting node': ~
                                        )
                                        'type': | 'stack' ~
                                    )
                                }
                                'values': {
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Schemas`: (
                            'parameters': | 'local' (
                                'lookups': {
                                    `sibling schemas`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Schemas`
                                            'resulting node': ~
                                        )
                                        'type': | 'stack' ~
                                    )
                                }
                                'values': {
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Signature`: (
                            'parameters': | 'local' (
                                'lookups': {
                                    `sibling signatures`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Signatures`
                                            'resulting node': ~
                                        )
                                        'type': | 'acyclic' ~
                                    )
                                }
                                'values': {
                                    `imports`: (
                                        'data type': (
                                            'location': | 'internal' `Imports`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                    `type`: (
                                        'data type': (
                                            'location': | 'internal' `Type`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                    `types`: (
                                        'data type': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Signature Parameters`: (
                            'parameters': | 'same as' `Resolve Logic`
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Signatures`: (
                            'parameters': | 'local' (
                                'lookups': {
                                }
                                'values': {
                                    `imports`: (
                                        'data type': (
                                            'location': | 'internal' `Imports`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                    `types`: (
                                        'data type': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Text Type`: (
                            'parameters': | 'local' (
                                'lookups': {
                                }
                                'values': {
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Type`: (
                            'parameters': | 'local' (
                                'lookups': {
                                    `noncircular sibling types`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                        'type': | 'acyclic' ~
                                    )
                                    `possibly circular dependent sibling types`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                        'type': | 'cyclic' ~
                                    )
                                }
                                'values': {
                                    `globals`: (
                                        'data type': (
                                            'location': | 'internal' `Globals`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `imports`: (
                                        'data type': (
                                            'location': | 'internal' `Imports`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Type Node`: (
                            'parameters': | 'local' (
                                'lookups': {
                                    `noncircular sibling types`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                        'type': | 'acyclic' ~
                                    )
                                    `possibly circular dependent sibling types`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                        'type': | 'cyclic' ~
                                    )
                                }
                                'values': {
                                    `globals`: (
                                        'data type': (
                                            'location': | 'internal' `Globals`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `imports`: (
                                        'data type': (
                                            'location': | 'internal' `Imports`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `type parameters`: (
                                        'data type': (
                                            'location': | 'internal' `Type Parameters`
                                            'resulting node': ~
                                        )
                                        'presence': | 'required' ~
                                    )
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Type Node Reference`: (
                            'parameters': | 'same as' `Type Reference`
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Type Parameters`: (
                            'parameters': | 'local' (
                                'lookups': {
                                }
                                'values': {
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Type Reference`: (
                            'parameters': | 'local' (
                                'lookups': {
                                    `types`: (
                                        'dictionary': ~
                                        'presence': | 'required' ~
                                        'referent': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                        'type': | 'acyclic' ~
                                    )
                                }
                                'values': {
                                    `imports`: (
                                        'data type': (
                                            'location': | 'internal' `Imports`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Type Specification`: (
                            'parameters': | 'local' (
                                'lookups': {
                                }
                                'values': {
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                        `Types`: (
                            'parameters': | 'local' (
                                'lookups': {
                                }
                                'values': {
                                    `globals`: (
                                        'data type': (
                                            'location': | 'internal' `Globals`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                    `imports`: (
                                        'data type': (
                                            'location': | 'internal' `Imports`
                                            'resulting node': ~
                                        )
                                        'presence': | 'optional' ~
                                    )
                                }
                            )
                            'resolved parameters': ~
                            'type': ~
                        )
                    }
                )
            )
            'globals': (
                'complexity': | 'constrained' ~
                'number types': {
                }
                'text types': {
                }
            )
            'imports': {
            }
            'types': {
                `Benchmark`: (
                    'node': | 'group' {
                        `dense`: | 'boolean' ~
                        `resulting dictionary`: | 'reference' (
                            'referent': (
                                'resulting node': ~
                                'tail': [ ]
                                'type location': (
                                    'location': | 'internal' `Dictionary`
                                    'resulting node': ~
                                )
                            )
                            'type': | 'derived' ~
                        )
                        `selection`: | 'component' | 'internal cyclic' `Guaranteed Value Selection`
                    }
                    'type parameters': {
                    }
                )
                `Constraint`: (
                    'node': | 'group' {
                        `selection`: | 'component' | 'internal' `Relative Value Selection`
                        `type`: | 'state group' {
                            `optional value`: | 'group' {
                                `selected optional value`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ | 'state group' `optional` ]
                                        'type location': (
                                            'location': | 'internal' `Type Node`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'derived' ~
                                )
                            }
                            `state`: | 'group' {
                                `selected state group`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ | 'state group' `state group` ]
                                        'type location': (
                                            'location': | 'internal' `Type Node`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'derived' ~
                                )
                                `state`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ | 'state group' `state group` ]
                                        'type location': (
                                            'location': | 'internal' `Type Node`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'selected' (
                                        'dependency': | 'acyclic' ~
                                        'dictionary': ~
                                    )
                                )
                            }
                        }
                    }
                    'type parameters': {
                    }
                )
                `Dictionary`: (
                    'node': | 'group' {
                        `node`: | 'component' | 'internal cyclic' `Type Node`
                        `ordered`: | 'boolean' ~
                    }
                    'type parameters': {
                    }
                )
                `Globals`: (
                    'node': | 'group' {
                        `complexity`: | 'state group' {
                            `constrained`: | 'nothing' ~
                            `unconstrained`: | 'nothing' ~
                        }
                        `number types`: | 'dictionary' (
                            'node': | 'component' | 'internal' `Number Type`
                            'ordered': `false`
                        )
                        `text types`: | 'dictionary' (
                            'node': | 'component' | 'internal' `Text Type`
                            'ordered': `false`
                        )
                    }
                    'type parameters': {
                    }
                )
                `Group`: (
                    'node': | 'dictionary' (
                        'node': | 'component' | 'internal cyclic' `Type Node`
                        'ordered': `false`
                    )
                    'type parameters': {
                    }
                )
                `Guaranteed Value Selection`: (
                    'node': | 'group' {
                        `resulting node`: | 'reference' (
                            'referent': (
                                'resulting node': ~
                                'tail': [ ]
                                'type location': (
                                    'location': | 'internal' `Type Node`
                                    'resulting node': ~
                                )
                            )
                            'type': | 'derived' ~
                        )
                        `start`: | 'state group' {
                            `constraint`: | 'state group' {
                                `component`: | 'group' {
                                    `constraint`: | 'reference' (
                                        'referent': (
                                            'resulting node': ~
                                            'tail': [ ]
                                            'type location': (
                                                'location': | 'internal' `Property Constraints`
                                                'resulting node': ~
                                            )
                                        )
                                        'type': | 'selected' (
                                            'dependency': | 'acyclic' ~
                                            'dictionary': ~
                                        )
                                    )
                                    `property`: | 'reference' (
                                        'referent': (
                                            'resulting node': ~
                                            'tail': [ ]
                                            'type location': (
                                                'location': | 'internal' `Node Resolver Group`
                                                'resulting node': ~
                                            )
                                        )
                                        'type': | 'selected' (
                                            'dependency': | 'acyclic' ~
                                            'dictionary': ~
                                        )
                                    )
                                }
                                `reference`: | 'group' {
                                    `constraint`: | 'reference' (
                                        'referent': (
                                            'resulting node': ~
                                            'tail': [ ]
                                            'type location': (
                                                'location': | 'internal' `Property Constraints`
                                                'resulting node': ~
                                            )
                                        )
                                        'type': | 'selected' (
                                            'dependency': | 'acyclic' ~
                                            'dictionary': ~
                                        )
                                    )
                                    `property`: | 'reference' (
                                        'referent': (
                                            'resulting node': ~
                                            'tail': [ ]
                                            'type location': (
                                                'location': | 'internal' `Node Resolver Group`
                                                'resulting node': ~
                                            )
                                        )
                                        'type': | 'selected' (
                                            'dependency': | 'acyclic' ~
                                            'dictionary': ~
                                        )
                                    )
                                }
                            }
                            `linked entry`: | 'nothing' ~
                            `list cursor`: | 'nothing' ~
                            `option constraint`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ ]
                                    'type location': (
                                        'location': | 'internal' `Option Constraints`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'selected' (
                                    'dependency': | 'acyclic' ~
                                    'dictionary': ~
                                )
                            )
                            `parameter`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ | 'group' `values` ]
                                    'type location': (
                                        'location': | 'internal' `Signature Parameters`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'selected' (
                                    'dependency': | 'acyclic' ~
                                    'dictionary': ~
                                )
                            )
                            `parent sibling`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ ]
                                    'type location': (
                                        'location': | 'internal' `Node Resolver Group`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'selected' (
                                    'dependency': | 'acyclic' ~
                                    'dictionary': ~
                                )
                            )
                            `result`: | 'state group' {
                                `list`: | 'group' {
                                    `list result`: | 'reference' (
                                        'referent': (
                                            'resulting node': ~
                                            'tail': [ | 'state group' `list` | 'group' `result` | 'optional' ~ ]
                                            'type location': (
                                                'location': | 'internal' `Node Resolver`
                                                'resulting node': ~
                                            )
                                        )
                                        'type': | 'derived' ~
                                    )
                                    `property`: | 'reference' (
                                        'referent': (
                                            'resulting node': ~
                                            'tail': [ ]
                                            'type location': (
                                                'location': | 'internal' `Node Resolver Group`
                                                'resulting node': ~
                                            )
                                        )
                                        'type': | 'selected' (
                                            'dependency': | 'acyclic' ~
                                            'dictionary': ~
                                        )
                                    )
                                }
                                `optional value`: | 'group' {
                                    `optional value`: | 'reference' (
                                        'referent': (
                                            'resulting node': ~
                                            'tail': [ | 'state group' `optional` ]
                                            'type location': (
                                                'location': | 'internal' `Node Resolver`
                                                'resulting node': ~
                                            )
                                        )
                                        'type': | 'derived' ~
                                    )
                                    `property`: | 'reference' (
                                        'referent': (
                                            'resulting node': ~
                                            'tail': [ ]
                                            'type location': (
                                                'location': | 'internal' `Node Resolver Group`
                                                'resulting node': ~
                                            )
                                        )
                                        'type': | 'selected' (
                                            'dependency': | 'acyclic' ~
                                            'dictionary': ~
                                        )
                                    )
                                    `result`: | 'component' | 'internal' `Type Reference`
                                }
                                `state group`: | 'group' {
                                    `property`: | 'reference' (
                                        'referent': (
                                            'resulting node': ~
                                            'tail': [ ]
                                            'type location': (
                                                'location': | 'internal' `Node Resolver Group`
                                                'resulting node': ~
                                            )
                                        )
                                        'type': | 'selected' (
                                            'dependency': | 'acyclic' ~
                                            'dictionary': ~
                                        )
                                    )
                                    `result`: | 'component' | 'internal' `Type Reference`
                                    `state group`: | 'reference' (
                                        'referent': (
                                            'resulting node': ~
                                            'tail': [ | 'state group' `state group` ]
                                            'type location': (
                                                'location': | 'internal' `Node Resolver`
                                                'resulting node': ~
                                            )
                                        )
                                        'type': | 'derived' ~
                                    )
                                }
                            }
                            `sibling`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ ]
                                    'type location': (
                                        'location': | 'internal' `Node Resolver Group`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'selected' (
                                    'dependency': | 'acyclic' ~
                                    'dictionary': ~
                                )
                            )
                        }
                        `tail`: | 'component' | 'internal' `Relative Value Selection`
                    }
                    'type parameters': {
                    }
                )
                `Imports`: (
                    'node': | 'dictionary' (
                        'node': | 'group' {
                            `schema`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ ]
                                    'type location': (
                                        'location': | 'internal' `Schema`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'derived' ~
                            )
                            `schema set child`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ ]
                                    'type location': (
                                        'location': | 'internal' `Schemas`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'selected' (
                                    'dependency': | 'stack' ~
                                    'dictionary': ~
                                )
                            )
                        }
                        'ordered': `false`
                    )
                    'type parameters': {
                    }
                )
                `Lookup Selection`: (
                    'node': | 'group' {
                        `resulting dictionary`: | 'reference' (
                            'referent': (
                                'resulting node': ~
                                'tail': [ ]
                                'type location': (
                                    'location': | 'internal' `Dictionary`
                                    'resulting node': ~
                                )
                            )
                            'type': | 'derived' ~
                        )
                        `type`: | 'state group' {
                            `dictionary`: | 'group' {
                                `selected dictionary`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ ]
                                        'type location': (
                                            'location': | 'internal' `Dictionary`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'derived' ~
                                )
                                `selection`: | 'component' | 'internal cyclic' `Guaranteed Value Selection`
                            }
                            `not circular dependent siblings`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ ]
                                    'type location': (
                                        'location': | 'internal' `Dictionary`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'derived' ~
                            )
                            `parameter`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ | 'group' `lookups` ]
                                    'type location': (
                                        'location': | 'internal' `Signature Parameters`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'selected' (
                                    'dependency': | 'acyclic' ~
                                    'dictionary': ~
                                )
                            )
                            `possibly circular dependent siblings`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ ]
                                    'type location': (
                                        'location': | 'internal' `Dictionary`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'derived' ~
                            )
                        }
                    }
                    'type parameters': {
                    }
                )
                `Node Resolver`: (
                    'node': | 'state group' {
                        `boolean`: | 'nothing' ~
                        `component`: | 'group' {
                            `arguments`: | 'optional' | 'group' {
                                `lookups`: | 'optional' | 'dictionary' (
                                    'node': | 'state group' {
                                        `empty stack`: | 'nothing' ~
                                        `not set`: | 'nothing' ~
                                        `selection`: | 'component' | 'internal' `Lookup Selection`
                                        `stack`: | 'group' {
                                            `element`: | 'component' | 'internal' `Lookup Selection`
                                            `stack`: | 'component' | 'internal' `Lookup Selection`
                                        }
                                    }
                                    'ordered': `false`
                                )
                                `values`: | 'optional' | 'dictionary' (
                                    'node': | 'state group' {
                                        `optional`: | 'component' | 'internal' `Optional Value Initialization`
                                        `parameter`: | 'reference' (
                                            'referent': (
                                                'resulting node': ~
                                                'tail': [ | 'group' `values` ]
                                                'type location': (
                                                    'location': | 'internal' `Signature Parameters`
                                                    'resulting node': ~
                                                )
                                            )
                                            'type': | 'selected' (
                                                'dependency': | 'acyclic' ~
                                                'dictionary': ~
                                            )
                                        )
                                        `required`: | 'component' | 'internal cyclic' `Guaranteed Value Selection`
                                    }
                                    'ordered': `false`
                                )
                            }
                            `constraints`: | 'component' | 'internal' `Property Constraints`
                            `location`: | 'state group' {
                                `external`: | 'group' {
                                    `import`: | 'reference' (
                                        'referent': (
                                            'resulting node': ~
                                            'tail': [ ]
                                            'type location': (
                                                'location': | 'internal' `Imports`
                                                'resulting node': ~
                                            )
                                        )
                                        'type': | 'selected' (
                                            'dependency': | 'acyclic' ~
                                            'dictionary': ~
                                        )
                                    )
                                    `type`: | 'reference' (
                                        'referent': (
                                            'resulting node': ~
                                            'tail': [ ]
                                            'type location': (
                                                'location': | 'internal' `Signatures`
                                                'resulting node': ~
                                            )
                                        )
                                        'type': | 'selected' (
                                            'dependency': | 'acyclic' ~
                                            'dictionary': ~
                                        )
                                    )
                                }
                                `internal`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ ]
                                        'type location': (
                                            'location': | 'internal' `Signatures`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'selected' (
                                        'dependency': | 'acyclic' ~
                                        'dictionary': ~
                                    )
                                )
                            }
                            `signature`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ | 'dictionary' ~ ]
                                    'type location': (
                                        'location': | 'internal' `Signatures`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'derived' ~
                            )
                        }
                        `dictionary`: | 'group' {
                            `benchmark`: | 'optional' | 'component' | 'internal' `Benchmark`
                            `definition`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ ]
                                    'type location': (
                                        'location': | 'internal' `Dictionary`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'derived' ~
                            )
                            `resolver`: | 'component' | 'internal cyclic' `Node Resolver`
                        }
                        `group`: | 'component' | 'internal' `Node Resolver Group`
                        `identifier value pair`: | 'component' | 'internal cyclic' `Node Resolver`
                        `list`: | 'group' {
                            `definition`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ | 'state group' `list` ]
                                    'type location': (
                                        'location': | 'internal' `Type Node`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'derived' ~
                            )
                            `resolver`: | 'component' | 'internal cyclic' `Node Resolver`
                            `result`: | 'optional' | 'component' | 'internal' `Node Resolver List Result`
                        }
                        `nothing`: | 'nothing' ~
                        `number`: | 'nothing' ~
                        `optional`: | 'group' {
                            `constraints`: | 'component' | 'internal' `Option Constraints`
                            `resolver`: | 'component' | 'internal cyclic' `Node Resolver`
                        }
                        `reference`: | 'group' {
                            `definition`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ | 'state group' `reference` ]
                                    'type location': (
                                        'location': | 'internal' `Type Node`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'derived' ~
                            )
                            `type`: | 'state group' {
                                `derived`: | 'group' {
                                    `value`: | 'component' | 'internal cyclic' `Guaranteed Value Selection`
                                }
                                `selected`: | 'group' {
                                    `constraints`: | 'component' | 'internal' `Property Constraints`
                                    `definition`: | 'reference' (
                                        'referent': (
                                            'resulting node': ~
                                            'tail': [ | 'state group' `reference` | 'group' `type` | 'state group' `selected` ]
                                            'type location': (
                                                'location': | 'internal' `Type Node`
                                                'resulting node': ~
                                            )
                                        )
                                        'type': | 'derived' ~
                                    )
                                    `lookup`: | 'component' | 'internal' `Lookup Selection`
                                }
                            }
                        }
                        `state group`: | 'group' {
                            `definition`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ | 'state group' `state group` ]
                                    'type location': (
                                        'location': | 'internal' `Type Node`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'derived' ~
                            )
                            `states`: | 'dictionary' (
                                'node': | 'group' {
                                    `constraints`: | 'component' | 'internal' `Option Constraints`
                                    `resolver`: | 'component' | 'internal cyclic' `Node Resolver`
                                }
                                'ordered': `false`
                            )
                        }
                        `text`: | 'nothing' ~
                        `type parameter`: | 'nothing' ~
                    }
                    'type parameters': {
                    }
                )
                `Node Resolver Group`: (
                    'node': | 'dictionary' (
                        'node': | 'group' {
                            `definition`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ | 'dictionary' ~ ]
                                    'type location': (
                                        'location': | 'internal' `Group`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'derived' ~
                            )
                            `resolver`: | 'component' | 'internal cyclic' `Node Resolver`
                        }
                        'ordered': `true`
                    )
                    'type parameters': {
                    }
                )
                `Node Resolver List Result`: (
                    'node': | 'component' | 'internal' `Type Reference`
                    'type parameters': {
                    }
                )
                `Number Type`: (
                    'node': | 'group' {
                        `precision`: | 'state group' {
                            `approximation`: | 'group' {
                                `significant digits`: | 'number' | 'local' (
                                    'precision': | 'exact' (
                                        'decimal separator offset': ~
                                        'type': | 'natural' ~
                                    )
                                )
                            }
                            `exact`: | 'group' {
                                `decimal separator offset`: | 'optional' | 'number' | 'local' (
                                    'precision': | 'exact' (
                                        'decimal separator offset': ~
                                        'type': | 'natural' ~
                                    )
                                )
                                `type`: | 'state group' {
                                    `integer`: | 'nothing' ~
                                    `natural`: | 'nothing' ~
                                    `positive natural`: | 'nothing' ~
                                }
                            }
                        }
                    }
                    'type parameters': {
                    }
                )
                `Option Constraints`: (
                    'node': | 'dictionary' (
                        'node': | 'state group' {
                            `assert is set`: | 'component' | 'internal cyclic' `Possible Value Selection`
                            `state`: | 'group' {
                                `selected state group`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ | 'state group' `state group` ]
                                        'type location': (
                                            'location': | 'internal' `Type Node`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'derived' ~
                                )
                                `selection`: | 'component' | 'internal cyclic' `Guaranteed Value Selection`
                                `state`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ | 'state group' `state group` ]
                                        'type location': (
                                            'location': | 'internal' `Type Node`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'selected' (
                                        'dependency': | 'acyclic' ~
                                        'dictionary': ~
                                    )
                                )
                            }
                        }
                        'ordered': `false`
                    )
                    'type parameters': {
                    }
                )
                `Optional Value Initialization`: (
                    'node': | 'state group' {
                        `not set`: | 'nothing' ~
                        `selection`: | 'component' | 'internal cyclic' `Possible Value Selection`
                        `set`: | 'component' | 'internal cyclic' `Guaranteed Value Selection`
                    }
                    'type parameters': {
                    }
                )
                `Possible Value Selection`: (
                    'node': | 'state group' {
                        `parameter`: | 'reference' (
                            'referent': (
                                'resulting node': ~
                                'tail': [ | 'group' `values` ]
                                'type location': (
                                    'location': | 'internal' `Signature Parameters`
                                    'resulting node': ~
                                )
                            )
                            'type': | 'selected' (
                                'dependency': | 'acyclic' ~
                                'dictionary': ~
                            )
                        )
                        `result`: | 'state group' {
                            `optional value`: | 'group' {
                                `optional value`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ | 'state group' `optional` ]
                                        'type location': (
                                            'location': | 'internal' `Node Resolver`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'derived' ~
                                )
                                `property`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ ]
                                        'type location': (
                                            'location': | 'internal' `Node Resolver Group`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'selected' (
                                        'dependency': | 'acyclic' ~
                                        'dictionary': ~
                                    )
                                )
                                `result`: | 'component' | 'internal' `Type Reference`
                            }
                            `state group`: | 'group' {
                                `property`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ ]
                                        'type location': (
                                            'location': | 'internal' `Node Resolver Group`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'selected' (
                                        'dependency': | 'acyclic' ~
                                        'dictionary': ~
                                    )
                                )
                                `result`: | 'component' | 'internal' `Type Reference`
                                `state group`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ | 'state group' `state group` ]
                                        'type location': (
                                            'location': | 'internal' `Node Resolver`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'derived' ~
                                )
                            }
                        }
                    }
                    'type parameters': {
                    }
                )
                `Presence`: (
                    'node': | 'state group' {
                        `optional`: | 'nothing' ~
                        `required`: | 'nothing' ~
                    }
                    'type parameters': {
                    }
                )
                `Property Constraint`: (
                    'node': | 'group' {
                        `constraint`: | 'component' | 'internal' `Constraint`
                        `start`: | 'state group' {
                            `property`: | 'nothing' ~
                            `sibling`: | 'component' | 'internal' `Reference To Property Constraint`
                        }
                    }
                    'type parameters': {
                    }
                )
                `Property Constraints`: (
                    'node': | 'dictionary' (
                        'node': | 'component' | 'internal cyclic' `Property Constraint`
                        'ordered': `true`
                    )
                    'type parameters': {
                    }
                )
                `Reference To Property Constraint`: (
                    'node': | 'reference' (
                        'referent': (
                            'resulting node': ~
                            'tail': [ ]
                            'type location': (
                                'location': | 'internal' `Property Constraints`
                                'resulting node': ~
                            )
                        )
                        'type': | 'selected' (
                            'dependency': | 'acyclic' ~
                            'dictionary': ~
                        )
                    )
                    'type parameters': {
                    }
                )
                `Relative Value Selection`: (
                    'node': | 'group' {
                        `path`: | 'list' (
                            'node': | 'state group' {
                                `component`: | 'nothing' ~
                                `group`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ ]
                                        'type location': (
                                            'location': | 'internal' `Group`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'selected' (
                                        'dependency': | 'acyclic' ~
                                        'dictionary': ~
                                    )
                                )
                                `reference`: | 'group' {
                                    `definition`: | 'reference' (
                                        'referent': (
                                            'resulting node': ~
                                            'tail': [ | 'state group' `reference` ]
                                            'type location': (
                                                'location': | 'internal' `Type Node`
                                                'resulting node': ~
                                            )
                                        )
                                        'type': | 'derived' ~
                                    )
                                }
                            }
                        )
                        `resulting node`: | 'reference' (
                            'referent': (
                                'resulting node': ~
                                'tail': [ ]
                                'type location': (
                                    'location': | 'internal' `Type Node`
                                    'resulting node': ~
                                )
                            )
                            'type': | 'derived' ~
                        )
                    }
                    'type parameters': {
                    }
                )
                `Resolve Logic`: (
                    'node': | 'group' {
                        `resolvers`: | 'component' | 'internal cyclic' `Resolvers`
                        `signatures`: | 'group' {
                            `types`: | 'component' | 'internal cyclic' `Signatures`
                        }
                    }
                    'type parameters': {
                    }
                )
                `Resolvers`: (
                    'node': | 'dictionary' (
                        'node': | 'group' {
                            `signature`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ | 'dictionary' ~ ]
                                    'type location': (
                                        'location': | 'internal' `Signatures`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'derived' ~
                            )
                            `type resolver`: | 'component' | 'internal cyclic' `Node Resolver`
                        }
                        'ordered': `true`
                    )
                    'type parameters': {
                    }
                )
                `Schema`: (
                    'node': | 'group' {
                        `complexity`: | 'state group' {
                            `constrained`: | 'component' | 'internal' `Resolve Logic`
                            `unconstrained`: | 'nothing' ~
                        }
                        `globals`: | 'component' | 'internal' `Globals`
                        `imports`: | 'component' | 'internal cyclic' `Imports`
                        `types`: | 'component' | 'internal' `Types`
                    }
                    'type parameters': {
                    }
                )
                `Schema Tree`: (
                    'node': | 'state group' {
                        `schema`: | 'component' | 'internal' `Schema`
                        `set`: | 'component' | 'internal cyclic' `Schemas`
                    }
                    'type parameters': {
                    }
                )
                `Schemas`: (
                    'node': | 'dictionary' (
                        'node': | 'component' | 'internal' `Schema Tree`
                        'ordered': `true`
                    )
                    'type parameters': {
                    }
                )
                `Signature`: (
                    'node': | 'group' {
                        `parameters`: | 'state group' {
                            `local`: | 'component' | 'internal' `Signature Parameters`
                            `same as`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ ]
                                    'type location': (
                                        'location': | 'internal' `Signatures`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'selected' (
                                    'dependency': | 'acyclic' ~
                                    'dictionary': ~
                                )
                            )
                        }
                        `resolved parameters`: | 'reference' (
                            'referent': (
                                'resulting node': ~
                                'tail': [ ]
                                'type location': (
                                    'location': | 'internal' `Signature Parameters`
                                    'resulting node': ~
                                )
                            )
                            'type': | 'derived' ~
                        )
                        `type`: | 'reference' (
                            'referent': (
                                'resulting node': ~
                                'tail': [ ]
                                'type location': (
                                    'location': | 'internal' `Type`
                                    'resulting node': ~
                                )
                            )
                            'type': | 'derived' ~
                        )
                    }
                    'type parameters': {
                    }
                )
                `Signature Parameters`: (
                    'node': | 'group' {
                        `lookups`: | 'dictionary' (
                            'node': | 'group' {
                                `dictionary`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ ]
                                        'type location': (
                                            'location': | 'internal' `Dictionary`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'derived' ~
                                )
                                `presence`: | 'component' | 'internal' `Presence`
                                `referent`: | 'component' | 'internal' `Type Reference`
                                `type`: | 'state group' {
                                    `acyclic`: | 'nothing' ~
                                    `cyclic`: | 'nothing' ~
                                    `stack`: | 'nothing' ~
                                }
                            }
                            'ordered': `false`
                        )
                        `values`: | 'dictionary' (
                            'node': | 'group' {
                                `data type`: | 'component' | 'internal' `Type Reference`
                                `presence`: | 'component' | 'internal' `Presence`
                            }
                            'ordered': `false`
                        )
                    }
                    'type parameters': {
                    }
                )
                `Signatures`: (
                    'node': | 'dictionary' (
                        'node': | 'component' | 'internal cyclic' `Signature`
                        'ordered': `true`
                    )
                    'type parameters': {
                    }
                )
                `Text Type`: (
                    'node': | 'group' {
                        `type`: | 'state group' {
                            `multi line`: | 'nothing' ~
                            `single line`: | 'nothing' ~
                        }
                    }
                    'type parameters': {
                    }
                )
                `Type`: (
                    'node': | 'group' {
                        `node`: | 'component' | 'internal cyclic' `Type Node`
                        `type parameters`: | 'component' | 'internal' `Type Parameters`
                    }
                    'type parameters': {
                    }
                )
                `Type Node`: (
                    'node': | 'state group' {
                        `boolean`: | 'nothing' ~
                        `component`: | 'state group' {
                            `external`: | 'group' {
                                `import`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ ]
                                        'type location': (
                                            'location': | 'internal' `Imports`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'selected' (
                                        'dependency': | 'acyclic' ~
                                        'dictionary': ~
                                    )
                                )
                                `type`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ ]
                                        'type location': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'selected' (
                                        'dependency': | 'acyclic' ~
                                        'dictionary': ~
                                    )
                                )
                            }
                            `internal`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ ]
                                    'type location': (
                                        'location': | 'internal' `Types`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'selected' (
                                    'dependency': | 'acyclic' ~
                                    'dictionary': ~
                                )
                            )
                            `internal cyclic`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ ]
                                    'type location': (
                                        'location': | 'internal' `Types`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'selected' (
                                    'dependency': | 'cyclic' ~
                                    'dictionary': ~
                                )
                            )
                        }
                        `dictionary`: | 'component' | 'internal' `Dictionary`
                        `group`: | 'component' | 'internal' `Group`
                        `identifier value pair`: | 'component' | 'internal cyclic' `Type Node`
                        `list`: | 'group' {
                            `node`: | 'component' | 'internal cyclic' `Type Node`
                        }
                        `nothing`: | 'nothing' ~
                        `number`: | 'state group' {
                            `global`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ | 'group' `number types` ]
                                    'type location': (
                                        'location': | 'internal' `Globals`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'selected' (
                                    'dependency': | 'acyclic' ~
                                    'dictionary': ~
                                )
                            )
                            `local`: | 'component' | 'internal' `Number Type`
                        }
                        `optional`: | 'component' | 'internal cyclic' `Type Node`
                        `reference`: | 'group' {
                            `referent`: | 'component' | 'internal cyclic' `Type Node Reference`
                            `type`: | 'state group' {
                                `derived`: | 'nothing' ~
                                `selected`: | 'group' {
                                    `dependency`: | 'state group' {
                                        `acyclic`: | 'nothing' ~
                                        `cyclic`: | 'nothing' ~
                                        `stack`: | 'nothing' ~
                                    }
                                    `dictionary`: | 'reference' (
                                        'referent': (
                                            'resulting node': ~
                                            'tail': [ ]
                                            'type location': (
                                                'location': | 'internal' `Dictionary`
                                                'resulting node': ~
                                            )
                                        )
                                        'type': | 'derived' ~
                                    )
                                }
                            }
                        }
                        `state group`: | 'dictionary' (
                            'node': | 'component' | 'internal cyclic' `Type Node`
                            'ordered': `false`
                        )
                        `text`: | 'state group' {
                            `global`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ | 'group' `text types` ]
                                    'type location': (
                                        'location': | 'internal' `Globals`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'selected' (
                                    'dependency': | 'acyclic' ~
                                    'dictionary': ~
                                )
                            )
                            `local`: | 'component' | 'internal' `Text Type`
                        }
                        `type parameter`: | 'reference' (
                            'referent': (
                                'resulting node': ~
                                'tail': [ ]
                                'type location': (
                                    'location': | 'internal' `Type Parameters`
                                    'resulting node': ~
                                )
                            )
                            'type': | 'selected' (
                                'dependency': | 'acyclic' ~
                                'dictionary': ~
                            )
                        )
                    }
                    'type parameters': {
                    }
                )
                `Type Node Reference`: (
                    'node': | 'group' {
                        `resulting node`: | 'reference' (
                            'referent': (
                                'resulting node': ~
                                'tail': [ ]
                                'type location': (
                                    'location': | 'internal' `Type Node`
                                    'resulting node': ~
                                )
                            )
                            'type': | 'derived' ~
                        )
                        `tail`: | 'list' (
                            'node': | 'state group' {
                                `dictionary`: | 'nothing' ~
                                `group`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ ]
                                        'type location': (
                                            'location': | 'internal' `Group`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'selected' (
                                        'dependency': | 'acyclic' ~
                                        'dictionary': ~
                                    )
                                )
                                `identifier value pair`: | 'nothing' ~
                                `list`: | 'nothing' ~
                                `optional`: | 'nothing' ~
                                `state group`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ | 'state group' `state group` ]
                                        'type location': (
                                            'location': | 'internal' `Type Node`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'selected' (
                                        'dependency': | 'acyclic' ~
                                        'dictionary': ~
                                    )
                                )
                            }
                        )
                        `type location`: | 'component' | 'internal' `Type Reference`
                    }
                    'type parameters': {
                    }
                )
                `Type Parameters`: (
                    'node': | 'dictionary' (
                        'node': | 'nothing' ~
                        'ordered': `false`
                    )
                    'type parameters': {
                    }
                )
                `Type Reference`: (
                    'node': | 'group' {
                        `location`: | 'state group' {
                            `external`: | 'group' {
                                `import`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ ]
                                        'type location': (
                                            'location': | 'internal' `Imports`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'selected' (
                                        'dependency': | 'acyclic' ~
                                        'dictionary': ~
                                    )
                                )
                                `type`: | 'reference' (
                                    'referent': (
                                        'resulting node': ~
                                        'tail': [ ]
                                        'type location': (
                                            'location': | 'internal' `Types`
                                            'resulting node': ~
                                        )
                                    )
                                    'type': | 'selected' (
                                        'dependency': | 'acyclic' ~
                                        'dictionary': ~
                                    )
                                )
                            }
                            `internal`: | 'reference' (
                                'referent': (
                                    'resulting node': ~
                                    'tail': [ ]
                                    'type location': (
                                        'location': | 'internal' `Types`
                                        'resulting node': ~
                                    )
                                )
                                'type': | 'selected' (
                                    'dependency': | 'acyclic' ~
                                    'dictionary': ~
                                )
                            )
                        }
                        `resulting node`: | 'reference' (
                            'referent': (
                                'resulting node': ~
                                'tail': [ ]
                                'type location': (
                                    'location': | 'internal' `Type Node`
                                    'resulting node': ~
                                )
                            )
                            'type': | 'derived' ~
                        )
                    }
                    'type parameters': {
                    }
                )
                `Type Specification`: (
                    'node': | 'group' {
                        `schema`: | 'component' | 'internal' `Schema Tree`
                        `schema path`: | 'list' (
                            'node': | 'text' | 'local' (
                                'type': | 'single line' ~
                            )
                        )
                        `type`: | 'text' | 'local' (
                            'type': | 'single line' ~
                        )
                    }
                    'type parameters': {
                    }
                )
                `Types`: (
                    'node': | 'dictionary' (
                        'node': | 'component' | 'internal' `Type`
                        'ordered': `true`
                    )
                    'type parameters': {
                    }
                )
            }
        )
        `token`: | 'schema' (
            'complexity': | 'unconstrained' ~
            'globals': (
                'complexity': | 'unconstrained' ~
                'number types': {
                }
                'text types': {
                }
            )
            'imports': {
            }
            'types': {
                `Annotated Token`: (
                    'node': | 'group' {
                        `end`: | 'component' | 'internal' `Location`
                        `start`: | 'component' | 'internal' `Location`
                        `trailing trivia`: | 'component' | 'internal' `Trivia`
                        `type`: | 'component' | 'internal' `Token Type`
                    }
                    'type parameters': {
                    }
                )
                `Delimited String`: (
                    'node': | 'text' | 'local' (
                        'type': | 'single line' ~
                    )
                    'type parameters': {
                    }
                )
                `Location`: (
                    'node': | 'group' {
                        `absolute`: | 'number' | 'local' (
                            'precision': | 'exact' (
                                'decimal separator offset': ~
                                'type': | 'natural' ~
                            )
                        )
                        `relative`: | 'component' | 'internal' `Relative Location`
                    }
                    'type parameters': {
                    }
                )
                `Range`: (
                    'node': | 'group' {
                        `end`: | 'component' | 'internal' `Location`
                        `start`: | 'component' | 'internal' `Location`
                    }
                    'type parameters': {
                    }
                )
                `Relative Location`: (
                    'node': | 'group' {
                        `column`: | 'number' | 'local' (
                            'precision': | 'exact' (
                                'decimal separator offset': ~
                                'type': | 'natural' ~
                            )
                        )
                        `line`: | 'number' | 'local' (
                            'precision': | 'exact' (
                                'decimal separator offset': ~
                                'type': | 'natural' ~
                            )
                        )
                    }
                    'type parameters': {
                    }
                )
                `String Type`: (
                    'node': | 'state group' {
                        `apostrophed`: | 'nothing' ~
                        `backticked`: | 'nothing' ~
                        `quoted`: | 'nothing' ~
                        `undelimited`: | 'nothing' ~
                    }
                    'type parameters': {
                    }
                )
                `Token Type`: (
                    'node': | 'state group' {
                        `!`: | 'nothing' ~
                        `#`: | 'nothing' ~
                        `(`: | 'nothing' ~
                        `)`: | 'nothing' ~
                        `*`: | 'nothing' ~
                        `:`: | 'nothing' ~
                        `<`: | 'nothing' ~
                        `>`: | 'nothing' ~
                        `@`: | 'nothing' ~
                        `[`: | 'nothing' ~
                        `]`: | 'nothing' ~
                        `string`: | 'group' {
                            `type`: | 'component' | 'internal' `String Type`
                            `value`: | 'component' | 'internal' `Delimited String`
                        }
                        `{`: | 'nothing' ~
                        `|`: | 'nothing' ~
                        `}`: | 'nothing' ~
                        `~`: | 'nothing' ~
                    }
                    'type parameters': {
                    }
                )
                `Tokenizer Result`: (
                    'node': | 'group' {
                        `end`: | 'component' | 'internal' `Location`
                        `leading trivia`: | 'component' | 'internal' `Trivia`
                        `tokens`: | 'list' (
                            'node': | 'component' | 'internal' `Annotated Token`
                        )
                    }
                    'type parameters': {
                    }
                )
                `Trivia`: (
                    'node': | 'group' {
                        `comments`: | 'list' (
                            'node': | 'group' {
                                `content`: | 'text' | 'local' (
                                    'type': | 'single line' ~
                                )
                                `range`: | 'component' | 'internal' `Range`
                                `trailing whitespace`: | 'component' | 'internal' `Whitespace`
                                `type`: | 'state group' {
                                    `block`: | 'nothing' ~
                                    `line`: | 'nothing' ~
                                }
                            }
                        )
                        `leading whitespace`: | 'component' | 'internal' `Whitespace`
                    }
                    'type parameters': {
                    }
                )
                `Whitespace`: (
                    'node': | 'group' {
                        `range`: | 'component' | 'internal' `Range`
                        `value`: | 'text' | 'local' (
                            'type': | 'single line' ~
                        )
                    }
                    'type parameters': {
                    }
                )
            }
        )
        `unmarshall errors`: | 'schema' (
            'complexity': | 'unconstrained' ~
            'globals': (
                'complexity': | 'constrained' ~
                'number types': {
                }
                'text types': {
                }
            )
            'imports': {
            }
            'types': {
                `Errors`: (
                    'node': | 'list' (
                        'node': | 'group' {
                            `range`: | 'component' | 'internal' `Range`
                            `type`: | 'state group' {
                                `error`: | 'state group' {
                                    `duplicate property`: | 'group' {
                                        `name`: | 'text' | 'local' (
                                            'type': | 'single line' ~
                                        )
                                    }
                                    `invalid value type`: | 'group' {
                                        `expected`: | 'list' (
                                            'node': | 'state group' {
                                                `concise group`: | 'nothing' ~
                                                `dictionary`: | 'nothing' ~
                                                `list`: | 'nothing' ~
                                                `not set`: | 'nothing' ~
                                                `set`: | 'nothing' ~
                                                `state`: | 'nothing' ~
                                                `text`: | 'nothing' ~
                                                `verbose group`: | 'nothing' ~
                                            }
                                        )
                                    }
                                    `missing property`: | 'group' {
                                        `name`: | 'text' | 'local' (
                                            'type': | 'single line' ~
                                        )
                                    }
                                    `state`: | 'state group' {
                                        `missing state name`: | 'nothing' ~
                                        `missing value`: | 'nothing' ~
                                        `more than 2 elements`: | 'nothing' ~
                                        `state is not a string`: | 'nothing' ~
                                        `unknown state`: | 'group' {
                                            `expected`: | 'dictionary' (
                                                'node': | 'nothing' ~
                                                'ordered': `false`
                                            )
                                            `found`: | 'text' | 'local' (
                                                'type': | 'single line' ~
                                            )
                                        }
                                    }
                                    `superfluous property`: | 'group' {
                                        `name`: | 'text' | 'local' (
                                            'type': | 'single line' ~
                                        )
                                    }
                                }
                                `warning`: | 'state group' {
                                    `expected apostrophed string`: | 'nothing' ~
                                    `expected backticked string`: | 'nothing' ~
                                    `expected quoted string`: | 'nothing' ~
                                    `expected undelimited string`: | 'nothing' ~
                                }
                            }
                        }
                    )
                    'type parameters': {
                    }
                )
                `Location`: (
                    'node': | 'group' {
                        `absolute`: | 'number' | 'local' (
                            'precision': | 'exact' (
                                'decimal separator offset': ~
                                'type': | 'natural' ~
                            )
                        )
                        `relative`: | 'component' | 'internal' `Relative Location`
                    }
                    'type parameters': {
                    }
                )
                `Range`: (
                    'node': | 'group' {
                        `end`: | 'component' | 'internal' `Location`
                        `start`: | 'component' | 'internal' `Location`
                    }
                    'type parameters': {
                    }
                )
                `Relative Location`: (
                    'node': | 'group' {
                        `column`: | 'number' | 'local' (
                            'precision': | 'exact' (
                                'decimal separator offset': ~
                                'type': | 'natural' ~
                            )
                        )
                        `line`: | 'number' | 'local' (
                            'precision': | 'exact' (
                                'decimal separator offset': ~
                                'type': | 'natural' ~
                            )
                        )
                    }
                    'type parameters': {
                    }
                )
            }
        )
        `unmarshall result`: | 'schema' (
            'complexity': | 'unconstrained' ~
            'globals': (
                'complexity': | 'unconstrained' ~
                'number types': {
                }
                'text types': {
                }
            )
            'imports': {
                `ast`: (
                    'schema': ~
                    'schema set child': `ast`
                )
                `schema`: (
                    'schema': ~
                    'schema set child': `schema`
                )
                `token`: (
                    'schema': ~
                    'schema set child': `token`
                )
            }
            'types': {
            }
        )
    }
)
